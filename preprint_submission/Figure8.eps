%!PS-Adobe-3.0 EPSF-3.0
%%Creator: matplotlib 0.99.1.1, http://matplotlib.sf.net
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 576 432
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2004 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  3 1 roll 2 array astore
  /setpagedevice where {
    pop 3 dict begin
      /PageSize exch def
      /ImagingBBox null def
      /Policies 1 dict dup begin /PageSize 3 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/cshow where {
  pop
  /cshow2 {
    dup {
      pop pop
      1 string dup 0 3 index put 3 index exec
    } exch cshow
    pop pop
  } def
}{
  /cshow2 {
    currentfont /FontType get 0 eq {
      0 2 2 index length 1 sub {
        2 copy get exch 1 add 2 index exch get
        2 copy exch 256 mul add
        2 string dup 0 6 5 roll put dup 1 5 4 roll put
        3 index exec
      } for
    } {
      dup {
        1 string dup 0 3 index put 3 index exec
      } forall
    } ifelse
    pop pop
  } def
} ifelse
/awcp {
  exch {
    false charpath
    5 index 5 index rmoveto
    6 index eq { 7 index 7 index rmoveto } if
  } exch cshow2
  6 {pop} repeat
} def
/Tj {
  fCol
  1 index stringwidth pdfTextMat idtransform pop
  sub 1 index length dup 0 ne { div } { pop pop 0 } ifelse
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16 {
  fCol
  2 index stringwidth pdfTextMat idtransform pop
  sub exch div
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16V {
  fCol
  2 index stringwidth pdfTextMat idtransform exch pop
  sub exch div
  0 pdfWordSpacing pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing add 0 exch
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj1 {
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 8 2 roll
  pdfTextRender 1 and 0 eq {
    6 copy awidthshow
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    7 index 7 index moveto
    6 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    false awcp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    8 6 roll moveto
    false awcp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    8 {pop} repeat
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { pdfFontSize 0.001 mul mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { pdfFontSize 0.001 mul mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2 image operators
/pdfImBuf 100 string def
/pdfIm {
  image
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfImM {
  fCol imagemask
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font T3_14_0
8 dict begin
/FontType 3 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox [-184 -236 1288 929] def
/Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
/BuildGlyph {
  exch /CharProcs get exch
  2 copy known not { pop /.notdef } if
  get exec
} bind def
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
/CharProcs 35 dict def
CharProcs begin
/seven {
636 0 82 0 551 729 setcachedevice
q
82 729 m
551 729 l
551 687 l
286 0 l
183 0 l
432 646 l
82 646 l
82 729 l
f
Q
} def
/one {
636 0 110 0 544 729 setcachedevice
q
124 83 m
285 83 l
285 639 l
110 604 l
110 694 l
284 729 l
383 729 l
383 83 l
544 83 l
544 0 l
124 0 l
124 83 l
f
Q
} def
/four {
636 0 49 0 580 729 setcachedevice
q
378 643 m
129 254 l
378 254 l
378 643 l
352 729 m
476 729 l
476 254 l
580 254 l
580 172 l
476 172 l
476 0 l
378 0 l
378 172 l
49 172 l
49 267 l
352 729 l
f
Q
} def
/zero {
636 0 66 -13 570 742 setcachedevice
q
318 664 m
267 664 229 639 203 589 c
177 539 165 464 165 364 c
165 264 177 189 203 139 c
229 89 267 64 318 64 c
369 64 407 89 433 139 c
458 189 471 264 471 364 c
471 464 458 539 433 589 c
407 639 369 664 318 664 c
318 742 m
399 742 461 709 505 645 c
548 580 570 486 570 364 c
570 241 548 147 505 83 c
461 19 399 -13 318 -13 c
236 -13 173 19 130 83 c
87 147 66 241 66 364 c
66 486 87 580 130 645 c
173 709 236 742 318 742 c
f
Q
} def
/space {
318 0 0 0 0 0 setcachedevice
q
Q
} def
/six {
636 0 70 -13 573 742 setcachedevice
q
330 404 m
286 404 251 388 225 358 c
199 328 186 286 186 234 c
186 181 199 139 225 109 c
251 79 286 64 330 64 c
374 64 409 79 435 109 c
461 139 474 181 474 234 c
474 286 461 328 435 358 c
409 388 374 404 330 404 c
526 713 m
526 623 l
501 635 476 644 451 650 c
425 656 400 659 376 659 c
310 659 260 637 226 593 c
192 549 172 482 168 394 c
187 422 211 444 240 459 c
269 474 301 482 336 482 c
409 482 467 459 509 415 c
551 371 573 310 573 234 c
573 159 550 99 506 54 c
462 9 403 -13 330 -13 c
246 -13 181 19 137 83 c
92 147 70 241 70 364 c
70 479 97 571 152 639 c
206 707 280 742 372 742 c
396 742 421 739 447 735 c
472 730 498 723 526 713 c
f
Q
} def
/three {
636 0 76 -13 556 742 setcachedevice
q
406 393 m
453 383 490 362 516 330 c
542 298 556 258 556 212 c
556 140 531 84 482 45 c
432 6 362 -13 271 -13 c
240 -13 208 -10 176 -4 c
144 1 110 10 76 22 c
76 117 l
103 101 133 89 166 81 c
198 73 232 69 268 69 c
330 69 377 81 409 105 c
441 129 458 165 458 212 c
458 254 443 288 413 312 c
383 336 341 349 287 349 c
202 349 l
202 430 l
291 430 l
339 430 376 439 402 459 c
428 478 441 506 441 543 c
441 580 427 609 401 629 c
374 649 336 659 287 659 c
260 659 231 656 200 650 c
169 644 135 635 98 623 c
98 711 l
135 721 170 729 203 734 c
235 739 266 742 296 742 c
370 742 429 725 473 691 c
517 657 539 611 539 553 c
539 513 527 479 504 451 c
481 423 448 403 406 393 c
f
Q
} def
/nine {
636 0 63 -13 566 742 setcachedevice
q
110 15 m
110 105 l
134 93 159 84 185 78 c
210 72 235 69 260 69 c
324 69 374 90 408 134 c
442 178 462 244 468 334 c
448 306 424 284 396 269 c
367 254 335 247 300 247 c
226 247 168 269 126 313 c
84 357 63 417 63 494 c
63 568 85 628 129 674 c
173 719 232 742 306 742 c
390 742 455 709 499 645 c
543 580 566 486 566 364 c
566 248 538 157 484 89 c
429 21 356 -13 264 -13 c
239 -13 214 -10 189 -6 c
163 -2 137 5 110 15 c
306 324 m
350 324 385 339 411 369 c
437 399 450 441 450 494 c
450 546 437 588 411 618 c
385 648 350 664 306 664 c
262 664 227 648 201 618 c
175 588 162 546 162 494 c
162 441 175 399 201 369 c
227 339 262 324 306 324 c
f
Q
} def
/A {
684 0 8 0 676 729 setcachedevice
q
342 632 m
208 269 l
476 269 l
342 632 l
286 729 m
398 729 l
676 0 l
573 0 l
507 187 l
178 187 l
112 0 l
8 0 l
286 729 l
f
Q
} def
/I {
295 0 98 0 197 729 setcachedevice
q
98 0 99 729 re
f
Q
} def
/Q {
787 0 56 -128 731 742 setcachedevice
q
394 662 m
322 662 265 635 223 582 c
181 528 160 456 160 364 c
160 272 181 199 223 146 c
265 92 322 66 394 66 c
465 66 522 92 564 146 c
606 199 627 272 627 364 c
627 456 606 528 564 582 c
522 635 465 662 394 662 c
532 13 m
662 -128 l
543 -128 l
435 -11 l
424 -11 416 -12 410 -12 c
404 -12 399 -13 394 -13 c
291 -13 209 21 148 89 c
86 157 56 248 56 364 c
56 479 86 571 148 639 c
209 707 291 742 394 742 c
496 742 577 707 639 639 c
700 571 731 479 731 364 c
731 279 714 206 680 146 c
646 86 596 41 532 13 c
f
Q
} def
/S {
635 0 66 -13 579 742 setcachedevice
q
535 705 m
535 609 l
497 627 462 640 429 649 c
395 657 363 662 333 662 c
279 662 237 651 208 631 c
179 610 165 580 165 542 c
165 510 174 485 194 469 c
213 452 250 439 304 429 c
364 417 l
437 403 491 378 526 343 c
561 307 579 260 579 201 c
579 130 555 77 508 41 c
460 5 391 -13 300 -13 c
265 -13 228 -9 189 -2 c
150 5 110 16 69 32 c
69 134 l
109 111 148 94 186 83 c
224 71 262 66 300 66 c
356 66 399 77 430 99 c
460 121 476 152 476 194 c
476 230 465 258 443 278 c
421 298 385 313 335 323 c
275 335 l
201 349 148 372 115 404 c
82 435 66 478 66 534 c
66 598 88 649 134 686 c
179 723 242 742 322 742 c
356 742 390 739 426 733 c
461 727 497 717 535 705 c
f
Q
} def
/five {
636 0 77 -13 549 729 setcachedevice
q
108 729 m
495 729 l
495 646 l
198 646 l
198 467 l
212 472 227 476 241 478 c
255 480 270 482 284 482 c
365 482 429 459 477 415 c
525 370 549 310 549 234 c
549 155 524 94 475 51 c
426 8 357 -13 269 -13 c
238 -13 207 -10 175 -6 c
143 -1 111 6 77 17 c
77 116 l
106 100 136 88 168 80 c
199 72 232 69 267 69 c
323 69 368 83 401 113 c
433 143 450 183 450 234 c
450 284 433 324 401 354 c
368 384 323 399 267 399 c
241 399 214 396 188 390 c
162 384 135 375 108 363 c
108 729 l
f
Q
} def
/two {
636 0 73 0 536 742 setcachedevice
q
192 83 m
536 83 l
536 0 l
73 0 l
73 83 l
110 121 161 173 226 239 c
290 304 331 346 348 365 c
380 400 402 430 414 455 c
426 479 433 504 433 528 c
433 566 419 598 392 622 c
365 646 330 659 286 659 c
255 659 222 653 188 643 c
154 632 117 616 78 594 c
78 694 l
118 710 155 722 189 730 c
223 738 255 742 284 742 c
359 742 419 723 464 685 c
509 647 532 597 532 534 c
532 504 526 475 515 449 c
504 422 484 390 454 354 c
446 344 420 317 376 272 c
332 227 271 164 192 83 c
f
Q
} def
/Z {
685 0 45 0 640 729 setcachedevice
q
56 729 m
629 729 l
629 654 l
168 83 l
640 83 l
640 0 l
45 0 l
45 75 l
506 646 l
56 646 l
56 729 l
f
Q
} def
/a {
613 0 60 -13 522 560 setcachedevice
q
343 275 m
270 275 220 266 192 250 c
164 233 150 205 150 165 c
150 133 160 107 181 89 c
202 70 231 61 267 61 c
317 61 357 78 387 114 c
417 149 432 196 432 255 c
432 275 l
343 275 l
522 312 m
522 0 l
432 0 l
432 83 l
411 49 385 25 355 10 c
325 -5 287 -13 243 -13 c
187 -13 142 2 109 33 c
76 64 60 106 60 159 c
60 220 80 266 122 298 c
163 329 224 345 306 345 c
432 345 l
432 354 l
432 395 418 427 391 450 c
364 472 326 484 277 484 c
245 484 215 480 185 472 c
155 464 127 453 100 439 c
100 522 l
132 534 164 544 195 550 c
226 556 256 560 286 560 c
365 560 424 539 463 498 c
502 457 522 395 522 312 c
f
Q
} def
/c {
550 0 55 -13 488 560 setcachedevice
q
488 526 m
488 442 l
462 456 437 466 411 473 c
385 480 360 484 334 484 c
276 484 230 465 198 428 c
166 391 150 339 150 273 c
150 206 166 154 198 117 c
230 80 276 62 334 62 c
360 62 385 65 411 72 c
437 79 462 90 488 104 c
488 21 l
462 9 436 0 410 -5 c
383 -10 354 -13 324 -13 c
242 -13 176 12 128 64 c
79 115 55 185 55 273 c
55 362 79 432 128 483 c
177 534 244 560 330 560 c
358 560 385 557 411 551 c
437 545 463 537 488 526 c
f
Q
} def
/e {
615 0 55 -13 562 560 setcachedevice
q
562 296 m
562 252 l
149 252 l
153 190 171 142 205 110 c
238 78 284 62 344 62 c
378 62 412 66 444 74 c
476 82 509 95 541 113 c
541 28 l
509 14 476 3 442 -3 c
408 -9 373 -13 339 -13 c
251 -13 182 12 131 62 c
80 112 55 181 55 268 c
55 357 79 428 127 481 c
175 533 241 560 323 560 c
397 560 455 536 498 489 c
540 441 562 377 562 296 c
472 322 m
471 371 457 410 431 440 c
404 469 368 484 324 484 c
274 484 234 469 204 441 c
174 413 156 373 152 322 c
472 322 l
f
Q
} def
/d {
635 0 55 -13 544 760 setcachedevice
q
454 464 m
454 760 l
544 760 l
544 0 l
454 0 l
454 82 l
435 49 411 25 382 10 c
353 -5 319 -13 279 -13 c
213 -13 159 13 117 65 c
75 117 55 187 55 273 c
55 359 75 428 117 481 c
159 533 213 560 279 560 c
319 560 353 552 382 536 c
411 520 435 496 454 464 c
148 273 m
148 207 161 155 188 117 c
215 79 253 61 301 61 c
348 61 385 79 413 117 c
440 155 454 207 454 273 c
454 339 440 390 413 428 c
385 466 348 485 301 485 c
253 485 215 466 188 428 c
161 390 148 339 148 273 c
f
Q
} def
/g {
635 0 55 -207 544 560 setcachedevice
q
454 280 m
454 344 440 395 414 431 c
387 467 349 485 301 485 c
253 485 215 467 188 431 c
161 395 148 344 148 280 c
148 215 161 165 188 129 c
215 93 253 75 301 75 c
349 75 387 93 414 129 c
440 165 454 215 454 280 c
544 68 m
544 -24 523 -93 482 -139 c
440 -184 377 -207 292 -207 c
260 -207 231 -204 203 -200 c
175 -195 147 -188 121 -178 c
121 -91 l
147 -105 173 -115 199 -122 c
225 -129 251 -133 278 -133 c
336 -133 380 -117 410 -87 c
439 -56 454 -10 454 52 c
454 96 l
435 64 411 40 382 24 c
353 8 319 0 279 0 c
211 0 157 25 116 76 c
75 127 55 195 55 280 c
55 364 75 432 116 483 c
157 534 211 560 279 560 c
319 560 353 552 382 536 c
411 520 435 496 454 464 c
454 547 l
544 547 l
544 68 l
f
Q
} def
/f {
352 0 23 0 371 760 setcachedevice
q
371 760 m
371 685 l
285 685 l
253 685 230 678 218 665 c
205 652 199 629 199 595 c
199 547 l
347 547 l
347 477 l
199 477 l
199 0 l
109 0 l
109 477 l
23 477 l
23 547 l
109 547 l
109 585 l
109 645 123 690 151 718 c
179 746 224 760 286 760 c
371 760 l
f
Q
} def
/i {
278 0 94 0 184 760 setcachedevice
q
94 547 m
184 547 l
184 0 l
94 0 l
94 547 l
94 760 m
184 760 l
184 646 l
94 646 l
94 760 l
f
Q
} def
/h {
634 0 91 0 549 760 setcachedevice
q
549 330 m
549 0 l
459 0 l
459 327 l
459 379 448 417 428 443 c
408 469 378 482 338 482 c
289 482 251 466 223 435 c
195 404 181 362 181 309 c
181 0 l
91 0 l
91 760 l
181 760 l
181 462 l
202 494 227 519 257 535 c
286 551 320 560 358 560 c
420 560 468 540 500 501 c
532 462 549 405 549 330 c
f
Q
} def
/m {
974 0 91 0 889 560 setcachedevice
q
520 442 m
542 482 569 511 600 531 c
631 550 668 560 711 560 c
767 560 811 540 842 500 c
873 460 889 403 889 330 c
889 0 l
799 0 l
799 327 l
799 379 789 418 771 444 c
752 469 724 482 686 482 c
639 482 602 466 575 435 c
548 404 535 362 535 309 c
535 0 l
445 0 l
445 327 l
445 379 435 418 417 444 c
398 469 369 482 331 482 c
285 482 248 466 221 435 c
194 404 181 362 181 309 c
181 0 l
91 0 l
91 547 l
181 547 l
181 462 l
201 495 226 520 255 536 c
283 552 317 560 357 560 c
397 560 430 550 458 530 c
486 510 506 480 520 442 c
f
Q
} def
/l {
278 0 94 0 184 760 setcachedevice
q
94 0 90 760 re
f
Q
} def
/o {
612 0 55 -13 557 560 setcachedevice
q
306 484 m
258 484 220 465 192 427 c
164 389 150 338 150 273 c
150 207 163 156 191 118 c
219 80 257 62 306 62 c
354 62 392 80 420 118 c
448 156 462 207 462 273 c
462 337 448 389 420 427 c
392 465 354 484 306 484 c
306 560 m
384 560 445 534 490 484 c
534 433 557 363 557 273 c
557 183 534 113 490 63 c
445 12 384 -13 306 -13 c
227 -13 165 12 121 63 c
77 113 55 183 55 273 c
55 363 77 433 121 484 c
165 534 227 560 306 560 c
f
Q
} def
/n {
634 0 91 0 549 560 setcachedevice
q
549 330 m
549 0 l
459 0 l
459 327 l
459 379 448 417 428 443 c
408 469 378 482 338 482 c
289 482 251 466 223 435 c
195 404 181 362 181 309 c
181 0 l
91 0 l
91 547 l
181 547 l
181 462 l
202 494 227 519 257 535 c
286 551 320 560 358 560 c
420 560 468 540 500 501 c
532 462 549 405 549 330 c
f
Q
} def
/q {
635 0 55 -207 544 560 setcachedevice
q
148 273 m
148 207 161 155 188 117 c
215 79 253 61 301 61 c
348 61 385 79 413 117 c
440 155 454 207 454 273 c
454 339 440 390 413 428 c
385 466 348 485 301 485 c
253 485 215 466 188 428 c
161 390 148 339 148 273 c
454 82 m
435 49 411 25 382 10 c
353 -5 319 -13 279 -13 c
213 -13 159 13 117 65 c
75 117 55 187 55 273 c
55 359 75 428 117 481 c
159 533 213 560 279 560 c
319 560 353 552 382 536 c
411 520 435 496 454 464 c
454 547 l
544 547 l
544 -207 l
454 -207 l
454 82 l
f
Q
} def
/s {
521 0 54 -13 472 560 setcachedevice
q
443 531 m
443 446 l
417 458 391 468 364 475 c
336 481 308 485 279 485 c
234 485 200 478 178 464 c
156 450 145 430 145 403 c
145 382 153 366 169 354 c
185 342 217 330 265 320 c
296 313 l
360 299 405 279 432 255 c
458 230 472 195 472 151 c
472 100 452 60 412 31 c
372 1 316 -13 246 -13 c
216 -13 186 -10 154 -5 c
122 0 89 8 54 20 c
54 113 l
87 95 120 82 152 74 c
184 65 216 61 248 61 c
290 61 323 68 346 82 c
368 96 380 117 380 144 c
380 168 371 187 355 200 c
339 213 303 226 247 238 c
216 245 l
160 257 119 275 95 299 c
70 323 58 356 58 399 c
58 450 76 490 112 518 c
148 546 200 560 268 560 c
301 560 332 557 362 552 c
391 547 418 540 443 531 c
f
Q
} def
/r {
411 0 91 0 411 560 setcachedevice
q
411 463 m
401 469 390 473 378 476 c
366 478 353 480 339 480 c
288 480 249 463 222 430 c
194 397 181 350 181 288 c
181 0 l
91 0 l
91 547 l
181 547 l
181 462 l
199 495 224 520 254 536 c
284 552 321 560 365 560 c
371 560 378 559 386 559 c
393 558 401 557 411 555 c
411 463 l
f
Q
} def
/u {
634 0 85 -13 543 547 setcachedevice
q
85 216 m
85 547 l
175 547 l
175 219 l
175 167 185 129 205 103 c
225 77 255 64 296 64 c
344 64 383 79 411 110 c
439 141 453 183 453 237 c
453 547 l
543 547 l
543 0 l
453 0 l
453 84 l
431 50 405 26 377 10 c
348 -5 315 -13 277 -13 c
214 -13 166 6 134 45 c
101 83 85 140 85 216 c
f
Q
} def
/t {
392 0 27 0 368 702 setcachedevice
q
183 702 m
183 547 l
368 547 l
368 477 l
183 477 l
183 180 l
183 135 189 106 201 94 c
213 81 238 75 276 75 c
368 75 l
368 0 l
276 0 l
206 0 158 13 132 39 c
106 65 93 112 93 180 c
93 477 l
27 477 l
27 547 l
93 547 l
93 702 l
183 702 l
f
Q
} def
/v {
592 0 30 0 562 547 setcachedevice
q
30 547 m
125 547 l
296 88 l
467 547 l
562 547 l
357 0 l
235 0 l
30 547 l
f
Q
} def
/eight {
636 0 68 -13 568 742 setcachedevice
q
318 346 m
271 346 234 333 207 308 c
180 283 167 249 167 205 c
167 161 180 126 207 101 c
234 76 271 64 318 64 c
364 64 401 76 428 102 c
455 127 469 161 469 205 c
469 249 455 283 429 308 c
402 333 365 346 318 346 c
219 388 m
177 398 144 418 120 447 c
96 476 85 511 85 553 c
85 611 105 657 147 691 c
188 725 245 742 318 742 c
390 742 447 725 489 691 c
530 657 551 611 551 553 c
551 511 539 476 515 447 c
491 418 459 398 417 388 c
464 377 501 355 528 323 c
554 291 568 251 568 205 c
568 134 546 80 503 43 c
459 5 398 -13 318 -13 c
237 -13 175 5 132 43 c
89 80 68 134 68 205 c
68 251 81 291 108 323 c
134 355 171 377 219 388 c
183 544 m
183 506 194 476 218 455 c
242 434 275 424 318 424 c
360 424 393 434 417 455 c
441 476 453 506 453 544 c
453 582 441 611 417 632 c
393 653 360 664 318 664 c
275 664 242 653 218 632 c
194 611 183 582 183 544 c
f
Q
} def
/T {
611 0 -2 0 614 729 setcachedevice
q
-2 729 m
614 729 l
614 646 l
355 646 l
355 0 l
256 0 l
256 646 l
-2 646 l
-2 729 l
f
Q
} def
end
currentdict end
/T3_14_0 exch definefont pop
%%EndResource
/F14_0 /T3_14_0 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /quoteleft/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/exclamdown/cent/sterling/fraction/yen/florin/section
  /currency/quotesingle/quotedblleft/guillemotleft/guilsinglleft/guilsinglright/fi/fl
  /.notdef/endash/dagger/daggerdbl/periodcentered/.notdef/paragraph/bullet
  /quotesinglbase/quotedblbase/quotedblright/guillemotright/ellipsis/perthousand/.notdef/questiondown
  /.notdef/grave/acute/circumflex/tilde/macron/breve/dotaccent
  /dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut/ogonek/caron
  /emdash/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/AE/.notdef/ordfeminine/.notdef/.notdef/.notdef/.notdef
  /Lslash/Oslash/OE/ordmasculine/.notdef/.notdef/.notdef/.notdef
  /.notdef/ae/.notdef/.notdef/.notdef/dotlessi/.notdef/.notdef
  /lslash/oslash/oe/germandbls/.notdef/.notdef/.notdef/.notdef]
pdfMakeFont
%%EndSetup
pdfStartPage
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
1 j
2 J
/DeviceGray {} cs
[1] sc
/DeviceGray {} CS
[1] SC
0 0 576 432 re
f
0 0 576 432 re
S
0 w
/DeviceGray {} CS
[0] SC
72 43.2 446.4 345.6 re
f
q
72 43.2 446.4 345.6 re
W
1 w
/DeviceRGB {} CS
[0 0 1] SC
73.4831 290.7984 m
74.9661 296.8365 l
76.4492 293.8418 l
77.9322 304.7404 l
79.4153 312.1219 l
80.8983 316.8479 l
82.3814 317.7707 l
83.8645 318.134 l
85.3475 317.8846 l
86.8306 320.1061 l
88.3136 317.538 l
89.7967 317.7085 l
91.2797 316.917 l
92.7628 317.3716 l
94.2458 319.0022 l
95.7289 316.3042 l
97.212 317.6682 l
98.695 317.8016 l
100.1781 315.0608 l
101.6611 313.5426 l
103.1442 316.353 l
104.6272 312.5847 l
106.1103 314.1645 l
107.5934 312.2897 l
109.0764 307.609 l
112.0425 306.1985 l
113.5256 306.3384 l
115.0086 308.6895 l
116.4917 309.5602 l
117.9748 304.0648 l
119.4578 308.179 l
120.9409 306.6576 l
122.4239 303.3332 l
123.907 302.3627 l
126.8731 305.8902 l
128.3561 302.6594 l
129.8392 303.9583 l
131.3223 302.5343 l
132.8053 299.9046 l
134.2884 298.197 l
135.7714 298.2265 l
137.2545 296.8204 l
138.7375 297.3244 l
140.2206 296.9158 l
141.7037 291.6791 l
143.1867 289.0973 l
144.6698 291.4204 l
146.1528 291.0444 l
147.6359 290.3095 l
149.1189 288.813 l
150.602 285.536 l
152.085 288.7712 l
153.5681 284.5207 l
155.0512 283.3651 l
156.5342 283.7142 l
158.0173 287.8994 l
160.9834 283.7392 l
162.4664 279.4985 l
163.9495 279.7982 l
166.9156 282.3477 l
168.3987 281.4607 l
169.8817 282.1741 l
171.3648 281.2521 l
172.8478 277.4157 l
174.3309 278.7715 l
175.814 276.8258 l
177.297 270.6049 l
178.7801 275.2713 l
180.2631 274.79 l
183.2292 271.5509 l
184.7123 272.4297 l
186.1953 269.214 l
187.6784 271.6165 l
189.1615 267.3956 l
190.6445 271.0779 l
192.1276 270.4504 l
193.6106 269.2356 l
195.0937 265.6912 l
196.5767 267.3374 l
198.0598 270.1233 l
199.5429 268.3281 l
201.0259 267.6873 l
202.509 265.0707 l
203.992 263.3108 l
205.4751 264.955 l
206.9581 264.1012 l
208.4412 266.7416 l
209.9243 260.9199 l
211.4073 261.1813 l
212.8904 263.6195 l
214.3734 264.4101 l
215.8565 256.1237 l
217.3395 257.1498 l
218.8226 256.8021 l
220.3056 257.5394 l
221.7887 254.8472 l
223.2718 254.6495 l
224.7548 257.3693 l
226.2379 254.3753 l
227.7209 255.8444 l
229.204 254.7238 l
230.687 252.9739 l
233.6532 254.7888 l
235.1362 253.6945 l
236.6193 251.7192 l
239.5854 250.0031 l
244.0346 244.907 l
245.5176 246.7913 l
247.0007 245.243 l
248.4837 244.7886 l
249.9668 246.9165 l
251.4498 247.5248 l
252.9329 245.5595 l
254.4159 246.1992 l
255.899 245.941 l
257.3821 247.9623 l
258.8651 247.4593 l
260.3482 247.7336 l
261.8312 244.0622 l
263.3143 244.8166 l
264.7973 248.5755 l
266.2804 244.8468 l
267.7635 243.5343 l
269.2465 247.1644 l
270.7296 246.8854 l
272.2126 245.0581 l
275.1787 244.9465 l
276.6618 240.2386 l
278.1449 239.9997 l
279.6279 240.2484 l
281.111 241.5311 l
282.594 239.3399 l
284.0771 239.3411 l
285.5601 238.987 l
288.5262 241.1516 l
290.0093 241.0934 l
291.4924 239.8053 l
292.9754 239.5733 l
295.9415 240.7507 l
297.4246 238.2904 l
298.9076 239.6323 l
301.8738 238.8707 l
303.3568 236.8136 l
304.8399 240.1168 l
306.3229 237.3112 l
307.806 238.9559 l
309.289 239.2729 l
310.7721 237.4576 l
312.2551 237.8918 l
313.7382 240.2643 l
315.2213 237.4863 l
316.7043 239.0168 l
318.1874 239.617 l
319.6704 238.0594 l
321.1535 237.7187 l
322.6365 235.7505 l
324.1196 237.0904 l
325.6027 235.3486 l
327.0857 235.4534 l
328.5688 236.2186 l
330.0518 235.8548 l
335.9841 237.3578 l
338.9502 237.1086 l
340.4332 237.3798 l
341.9163 236.375 l
343.3993 238.5541 l
344.8824 236.3824 l
346.3654 237.929 l
347.8485 236.3001 l
349.3316 236.3634 l
350.8146 235.8085 l
352.2977 237.2787 l
353.7807 237.3004 l
355.2638 236.1322 l
356.7468 236.5559 l
358.2299 237.4264 l
359.713 235.7798 l
362.6791 234.4711 l
365.6452 236.2111 l
367.1282 234.6597 l
368.6113 236.0061 l
370.0944 235.6727 l
371.5774 237.797 l
373.0605 235.8691 l
376.0266 236.9983 l
377.5096 234.7621 l
380.4757 236.6204 l
383.4419 233.7948 l
384.9249 235.7711 l
386.408 237.1381 l
387.891 233.7447 l
389.3741 233.2183 l
390.8571 235.561 l
392.3402 236.1371 l
393.8233 233.9734 l
395.3063 235.3992 l
396.7894 235.4368 l
398.2724 234.8884 l
402.7216 234.5858 l
405.6877 235.8128 l
407.1708 234.9126 l
408.6538 235.1708 l
411.6199 235.0055 l
414.586 235.2938 l
416.0691 233.5602 l
417.5522 235.5906 l
420.5183 235.6791 l
422.0013 235.8312 l
423.4844 236.3311 l
424.9674 237.3415 l
427.9336 234.0654 l
429.4166 236.3853 l
430.8997 234.6681 l
432.3827 237.171 l
433.8658 235.7758 l
436.8319 236.4406 l
438.315 235.0297 l
441.2811 236.6537 l
442.7641 235.2194 l
444.2472 235.5501 l
445.7302 236.4561 l
447.2133 236.3525 l
448.6963 234.8471 l
450.1794 236.5001 l
451.6625 235.2536 l
453.1455 234.7882 l
454.6286 236.0983 l
456.1116 235.5901 l
457.5947 236.0991 l
459.0777 235.97 l
460.5608 236.8291 l
462.0439 237.2267 l
463.5269 235.1264 l
465.01 237.0641 l
466.493 236.7403 l
467.9761 234.6207 l
469.4591 234.9112 l
470.9422 235.9686 l
472.4252 235.611 l
473.9083 237.0791 l
475.3914 235.462 l
476.8744 234.9623 l
478.3575 235.2386 l
479.8405 235.8969 l
481.3236 236.9482 l
482.8066 236.7628 l
484.2897 236.2328 l
485.7728 234.8965 l
487.2558 235.3763 l
488.7389 235.0896 l
490.2219 236.1728 l
493.188 235.9476 l
496.1542 235.9634 l
499.1203 234.6407 l
500.6033 234.7134 l
502.0864 235.4962 l
505.0525 235.6955 l
506.5355 235.8428 l
508.0186 234.9289 l
509.5017 235.0594 l
510.9847 236.0912 l
512.4678 236.1879 l
513.9508 236.6579 l
513.9508 236.6579 l
S
Q
q
72 43.2 446.4 345.6 re
W
1 w
/DeviceRGB {} CS
[1 0 0] SC
72 225.0947 m
518.4 225.0947 l
S
Q
q
72 43.2 446.4 345.6 re
W
0 J
1 w
[6 6] 0 d
/DeviceRGB {} CS
[0 0.5 0] SC
72 209.2699 m
518.4 209.2699 l
S
Q
q
72 43.2 446.4 345.6 re
W
0 J
1 w
[6 6] 0 d
/DeviceRGB {} CS
[0 0.5 0] SC
72 240.9196 m
518.4 240.9196 l
S
Q
q
72 43.2 446.4 345.6 re
W
0 J
0.5 w
[1 3] 0 d
/DeviceGray {} CS
[0] SC
72 43.2 m
72 388.8 l
S
Q
0 J
0.5 w
/DeviceGray {} CS
[0] SC
72 43.2 m
72 47.2 l
S
72 388.8 m
72 384.8 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
68.9766 30.2938 Td
/F14_0 12 Tf
(0) 7.632 Tj
q
72 43.2 446.4 345.6 re
W
0.5 w
[1 3] 0 d
101.6611 43.2 m
101.6611 388.8 l
S
Q
0.5 w
101.6611 43.2 m
101.6611 47.2 l
S
101.6611 388.8 m
101.6611 384.8 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
94.8564 30.2938 Td
/F14_0 12 Tf
(20) 15.264 Tj
q
72 43.2 446.4 345.6 re
W
0.5 w
[1 3] 0 d
131.3223 43.2 m
131.3223 388.8 l
S
Q
0.5 w
131.3223 43.2 m
131.3223 47.2 l
S
131.3223 388.8 m
131.3223 384.8 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
124.3769 30.2938 Td
/F14_0 12 Tf
(40) 15.264 Tj
q
72 43.2 446.4 345.6 re
W
0.5 w
[1 3] 0 d
160.9834 43.2 m
160.9834 388.8 l
S
Q
0.5 w
160.9834 43.2 m
160.9834 47.2 l
S
160.9834 388.8 m
160.9834 384.8 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
154.1631 30.2938 Td
/F14_0 12 Tf
(60) 15.264 Tj
q
72 43.2 446.4 345.6 re
W
0.5 w
[1 3] 0 d
190.6445 43.2 m
190.6445 388.8 l
S
Q
0.5 w
190.6445 43.2 m
190.6445 47.2 l
S
190.6445 388.8 m
190.6445 384.8 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
183.8086 30.2938 Td
/F14_0 12 Tf
(80) 15.264 Tj
q
72 43.2 446.4 345.6 re
W
0.5 w
[1 3] 0 d
220.3056 43.2 m
220.3056 388.8 l
S
Q
0.5 w
220.3056 43.2 m
220.3056 47.2 l
S
220.3056 388.8 m
220.3056 384.8 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
209.8994 30.2938 Td
/F14_0 12 Tf
(100) 22.896 Tj
q
72 43.2 446.4 345.6 re
W
0.5 w
[1 3] 0 d
249.9668 43.2 m
249.9668 388.8 l
S
Q
0.5 w
249.9668 43.2 m
249.9668 47.2 l
S
249.9668 388.8 m
249.9668 384.8 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
239.5605 30.2938 Td
/F14_0 12 Tf
(120) 22.896 Tj
q
72 43.2 446.4 345.6 re
W
0.5 w
[1 3] 0 d
279.6279 43.2 m
279.6279 388.8 l
S
Q
0.5 w
279.6279 43.2 m
279.6279 47.2 l
S
279.6279 388.8 m
279.6279 384.8 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
269.2217 30.2938 Td
/F14_0 12 Tf
(140) 22.896 Tj
q
72 43.2 446.4 345.6 re
W
0.5 w
[1 3] 0 d
309.289 43.2 m
309.289 388.8 l
S
Q
0.5 w
309.289 43.2 m
309.289 47.2 l
S
309.289 388.8 m
309.289 384.8 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
298.8828 30.2938 Td
/F14_0 12 Tf
(160) 22.896 Tj
q
72 43.2 446.4 345.6 re
W
0.5 w
[1 3] 0 d
338.9502 43.2 m
338.9502 388.8 l
S
Q
0.5 w
338.9502 43.2 m
338.9502 47.2 l
S
338.9502 388.8 m
338.9502 384.8 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
328.5439 30.2938 Td
/F14_0 12 Tf
(180) 22.896 Tj
q
72 43.2 446.4 345.6 re
W
0.5 w
[1 3] 0 d
368.6113 43.2 m
368.6113 388.8 l
S
Q
0.5 w
368.6113 43.2 m
368.6113 47.2 l
S
368.6113 388.8 m
368.6113 384.8 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
357.9863 30.2938 Td
/F14_0 12 Tf
(200) 22.896 Tj
q
72 43.2 446.4 345.6 re
W
0.5 w
[1 3] 0 d
398.2724 43.2 m
398.2724 388.8 l
S
Q
0.5 w
398.2724 43.2 m
398.2724 47.2 l
S
398.2724 388.8 m
398.2724 384.8 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
387.6474 30.2938 Td
/F14_0 12 Tf
(220) 22.896 Tj
q
72 43.2 446.4 345.6 re
W
0.5 w
[1 3] 0 d
427.9336 43.2 m
427.9336 388.8 l
S
Q
0.5 w
427.9336 43.2 m
427.9336 47.2 l
S
427.9336 388.8 m
427.9336 384.8 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
417.3086 30.2938 Td
/F14_0 12 Tf
(240) 22.896 Tj
q
72 43.2 446.4 345.6 re
W
0.5 w
[1 3] 0 d
457.5947 43.2 m
457.5947 388.8 l
S
Q
0.5 w
457.5947 43.2 m
457.5947 47.2 l
S
457.5947 388.8 m
457.5947 384.8 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
446.9697 30.2938 Td
/F14_0 12 Tf
(260) 22.896 Tj
q
72 43.2 446.4 345.6 re
W
0.5 w
[1 3] 0 d
487.2558 43.2 m
487.2558 388.8 l
S
Q
0.5 w
487.2558 43.2 m
487.2558 47.2 l
S
487.2558 388.8 m
487.2558 384.8 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
476.6308 30.2938 Td
/F14_0 12 Tf
(280) 22.896 Tj
q
72 43.2 446.4 345.6 re
W
0.5 w
[1 3] 0 d
516.9169 43.2 m
516.9169 388.8 l
S
Q
0.5 w
516.9169 43.2 m
516.9169 47.2 l
S
516.9169 388.8 m
516.9169 384.8 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
506.3154 30.2938 Td
/F14_0 12 Tf
(300) 22.896 Tj
[1 0 0 1 0 0] Tm
0 0 Td
250.9734 15.9969 Td
/F14_0 12 Tf
(Trading rounds) 90.984 Tj
q
72 43.2 446.4 345.6 re
W
0.5 w
[1 3] 0 d
72 43.2 m
518.4 43.2 l
S
Q
0.5 w
72 43.2 m
76 43.2 l
S
518.4 43.2 m
514.4 43.2 l
S
/DeviceGray {} cs
[0] sc
1 w
q
[1 0 0 1 44.7188 38.6609] cm
[1 0 0 1 0 0] Tm
0 0 Td
10.0547 0.1719 Td
/F14_0 12 Tf
(10) 15.264 Tj
q
[0.012 0 0 0.012 0 0] cm
q
[1 0 0 1 0 0] cm
-184 -236 1472 1165 re
W
106 272 626 83 re
f
Q
Q
Q
q
72 43.2 446.4 345.6 re
W
0.5 w
[1 3] 0 d
72 61.3895 m
518.4 61.3895 l
S
Q
0.5 w
72 61.3895 m
76 61.3895 l
S
518.4 61.3895 m
514.4 61.3895 l
S
/DeviceGray {} cs
[0] sc
1 w
q
[1 0 0 1 52.4063 56.8504] cm
[1 0 0 1 0 0] Tm
0 0 Td
10.0547 0.1719 Td
/F14_0 12 Tf
(9) 7.632 Tj
q
[0.012 0 0 0.012 0 0] cm
q
[1 0 0 1 0 0] cm
-184 -236 1472 1165 re
W
106 272 626 83 re
f
Q
Q
Q
q
72 43.2 446.4 345.6 re
W
0.5 w
[1 3] 0 d
72 79.5789 m
518.4 79.5789 l
S
Q
0.5 w
72 79.5789 m
76 79.5789 l
S
518.4 79.5789 m
514.4 79.5789 l
S
/DeviceGray {} cs
[0] sc
1 w
q
[1 0 0 1 52.3906 75.0399] cm
[1 0 0 1 0 0] Tm
0 0 Td
10.0547 0.1719 Td
/F14_0 12 Tf
(8) 7.632 Tj
q
[0.012 0 0 0.012 0 0] cm
q
[1 0 0 1 0 0] cm
-184 -236 1472 1165 re
W
106 272 626 83 re
f
Q
Q
Q
q
72 43.2 446.4 345.6 re
W
0.5 w
[1 3] 0 d
72 97.7684 m
518.4 97.7684 l
S
Q
0.5 w
72 97.7684 m
76 97.7684 l
S
518.4 97.7684 m
514.4 97.7684 l
S
/DeviceGray {} cs
[0] sc
1 w
q
[1 0 0 1 52.5938 93.3934] cm
[1 0 0 1 0 0] Tm
0 0 Td
10.0547 0 Td
/F14_0 12 Tf
(7) 7.632 Tj
q
[0.012 0 0 0.012 0 0] cm
q
[1 0 0 1 0 0] cm
-184 -236 1472 1165 re
W
106 272 626 83 re
f
Q
Q
Q
q
72 43.2 446.4 345.6 re
W
0.5 w
[1 3] 0 d
72 115.9579 m
518.4 115.9579 l
S
Q
0.5 w
72 115.9579 m
76 115.9579 l
S
518.4 115.9579 m
514.4 115.9579 l
S
/DeviceGray {} cs
[0] sc
1 w
q
[1 0 0 1 52.3281 111.4188] cm
[1 0 0 1 0 0] Tm
0 0 Td
10.0547 0.1719 Td
/F14_0 12 Tf
(6) 7.632 Tj
q
[0.012 0 0 0.012 0 0] cm
q
[1 0 0 1 0 0] cm
-184 -236 1472 1165 re
W
106 272 626 83 re
f
Q
Q
Q
q
72 43.2 446.4 345.6 re
W
0.5 w
[1 3] 0 d
72 134.1474 m
518.4 134.1474 l
S
Q
0.5 w
72 134.1474 m
76 134.1474 l
S
518.4 134.1474 m
514.4 134.1474 l
S
/DeviceGray {} cs
[0] sc
1 w
q
[1 0 0 1 52.6094 129.6864] cm
[1 0 0 1 0 0] Tm
0 0 Td
10.0547 0.1719 Td
/F14_0 12 Tf
(5) 7.632 Tj
q
[0.012 0 0 0.012 0 0] cm
q
[1 0 0 1 0 0] cm
-184 -236 1472 1165 re
W
106 272 626 83 re
f
Q
Q
Q
q
72 43.2 446.4 345.6 re
W
0.5 w
[1 3] 0 d
72 152.3368 m
518.4 152.3368 l
S
Q
0.5 w
72 152.3368 m
76 152.3368 l
S
518.4 152.3368 m
514.4 152.3368 l
S
/DeviceGray {} cs
[0] sc
1 w
q
[1 0 0 1 52.2344 147.9618] cm
[1 0 0 1 0 0] Tm
0 0 Td
10.0547 0 Td
/F14_0 12 Tf
(4) 7.632 Tj
q
[0.012 0 0 0.012 0 0] cm
q
[1 0 0 1 0 0] cm
-184 -236 1472 1165 re
W
106 272 626 83 re
f
Q
Q
Q
q
72 43.2 446.4 345.6 re
W
0.5 w
[1 3] 0 d
72 170.5263 m
518.4 170.5263 l
S
Q
0.5 w
72 170.5263 m
76 170.5263 l
S
518.4 170.5263 m
514.4 170.5263 l
S
/DeviceGray {} cs
[0] sc
1 w
q
[1 0 0 1 52.5313 165.9873] cm
[1 0 0 1 0 0] Tm
0 0 Td
10.0547 0.1719 Td
/F14_0 12 Tf
(3) 7.632 Tj
q
[0.012 0 0 0.012 0 0] cm
q
[1 0 0 1 0 0] cm
-184 -236 1472 1165 re
W
106 272 626 83 re
f
Q
Q
Q
q
72 43.2 446.4 345.6 re
W
0.5 w
[1 3] 0 d
72 188.7158 m
518.4 188.7158 l
S
Q
0.5 w
72 188.7158 m
76 188.7158 l
S
518.4 188.7158 m
514.4 188.7158 l
S
/DeviceGray {} cs
[0] sc
1 w
q
[1 0 0 1 52.7656 184.2627] cm
[1 0 0 1 0 0] Tm
0 0 Td
10.0547 0 Td
/F14_0 12 Tf
(2) 7.632 Tj
q
[0.012 0 0 0.012 0 0] cm
q
[1 0 0 1 0 0] cm
-184 -236 1472 1165 re
W
106 272 626 83 re
f
Q
Q
Q
q
72 43.2 446.4 345.6 re
W
0.5 w
[1 3] 0 d
72 206.9053 m
518.4 206.9053 l
S
Q
0.5 w
72 206.9053 m
76 206.9053 l
S
518.4 206.9053 m
514.4 206.9053 l
S
/DeviceGray {} cs
[0] sc
1 w
q
[1 0 0 1 52.6719 202.5303] cm
[1 0 0 1 0 0] Tm
0 0 Td
10.0547 0 Td
/F14_0 12 Tf
(1) 7.632 Tj
q
[0.012 0 0 0.012 0 0] cm
q
[1 0 0 1 0 0] cm
-184 -236 1472 1165 re
W
106 272 626 83 re
f
Q
Q
Q
q
72 43.2 446.4 345.6 re
W
0.5 w
[1 3] 0 d
72 225.0947 m
518.4 225.0947 l
S
Q
0.5 w
72 225.0947 m
76 225.0947 l
S
518.4 225.0947 m
514.4 225.0947 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
61.9531 220.7275 Td
/F14_0 12 Tf
(0) 7.632 Tj
q
72 43.2 446.4 345.6 re
W
0.5 w
[1 3] 0 d
72 243.2842 m
518.4 243.2842 l
S
Q
0.5 w
72 243.2842 m
76 243.2842 l
S
518.4 243.2842 m
514.4 243.2842 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
62.7813 238.9092 Td
/F14_0 12 Tf
(1) 7.632 Tj
q
72 43.2 446.4 345.6 re
W
0.5 w
[1 3] 0 d
72 261.4737 m
518.4 261.4737 l
S
Q
0.5 w
72 261.4737 m
76 261.4737 l
S
518.4 261.4737 m
514.4 261.4737 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
62.4375 257.0206 Td
/F14_0 12 Tf
(2) 7.632 Tj
q
72 43.2 446.4 345.6 re
W
0.5 w
[1 3] 0 d
72 279.6632 m
518.4 279.6632 l
S
Q
0.5 w
72 279.6632 m
76 279.6632 l
S
518.4 279.6632 m
514.4 279.6632 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
62.25 275.296 Td
/F14_0 12 Tf
(3) 7.632 Tj
q
72 43.2 446.4 345.6 re
W
0.5 w
[1 3] 0 d
72 297.8526 m
518.4 297.8526 l
S
Q
0.5 w
72 297.8526 m
76 297.8526 l
S
518.4 297.8526 m
514.4 297.8526 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
61.625 293.4776 Td
/F14_0 12 Tf
(4) 7.632 Tj
q
72 43.2 446.4 345.6 re
W
0.5 w
[1 3] 0 d
72 316.0421 m
518.4 316.0421 l
S
Q
0.5 w
72 316.0421 m
76 316.0421 l
S
518.4 316.0421 m
514.4 316.0421 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
62.3281 311.753 Td
/F14_0 12 Tf
(5) 7.632 Tj
q
72 43.2 446.4 345.6 re
W
0.5 w
[1 3] 0 d
72 334.2316 m
518.4 334.2316 l
S
Q
0.5 w
72 334.2316 m
76 334.2316 l
S
518.4 334.2316 m
514.4 334.2316 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
61.9688 329.8644 Td
/F14_0 12 Tf
(6) 7.632 Tj
q
72 43.2 446.4 345.6 re
W
0.5 w
[1 3] 0 d
72 352.4211 m
518.4 352.4211 l
S
Q
0.5 w
72 352.4211 m
76 352.4211 l
S
518.4 352.4211 m
514.4 352.4211 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
62.375 348.0461 Td
/F14_0 12 Tf
(7) 7.632 Tj
q
72 43.2 446.4 345.6 re
W
0.5 w
[1 3] 0 d
72 370.6105 m
518.4 370.6105 l
S
Q
0.5 w
72 370.6105 m
76 370.6105 l
S
518.4 370.6105 m
514.4 370.6105 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
62 366.2433 Td
/F14_0 12 Tf
(8) 7.632 Tj
q
72 43.2 446.4 345.6 re
W
0.5 w
[1 3] 0 d
72 388.8 m
518.4 388.8 l
S
Q
0.5 w
72 388.8 m
76 388.8 l
S
518.4 388.8 m
514.4 388.8 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
61.9531 384.4328 Td
/F14_0 12 Tf
(9) 7.632 Tj
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 39.7188 128.0703] Tm
0 0 Td
0 2.5 Td
/F14_0 12 Tf
(Achievement of required QoS) 177.228 Tj
2 J
72 388.8 m
518.4 388.8 l
S
518.4 43.2 m
518.4 388.8 l
S
72 43.2 m
518.4 43.2 l
S
72 43.2 m
72 388.8 l
S
/DeviceGray {} cs
[0] sc
313.9447 260.7365 m
317.3876 258.7003 l
300.5698 230.2647 l
304.0127 228.2284 l
296.9797 228.1233 l
293.684 234.3372 l
297.1269 232.3009 l
313.9447 260.7365 l
f
313.9447 260.7365 m
317.3876 258.7003 l
300.5698 230.2647 l
304.0127 228.2284 l
296.9797 228.1233 l
293.684 234.3372 l
297.1269 232.3009 l
313.9447 260.7365 l
S
0 J
/DeviceGray {} cs
[0] sc
[1 0 0 1 0 0] Tm
0 0 Td
316.7043 263.0206 Td
/F14_0 12 Tf
(Ideal level of QoS) 105.192 Tj
2 J
/DeviceGray {} cs
[0] sc
250.7976 176.7634 m
254.5397 175.3505 l
264.881 202.7383 l
268.6231 201.3253 l
264.159 206.4879 l
257.3968 205.5643 l
261.1389 204.1513 l
250.7976 176.7634 l
f
250.7976 176.7634 m
254.5397 175.3505 l
264.881 202.7383 l
268.6231 201.3253 l
264.159 206.4879 l
257.3968 205.5643 l
261.1389 204.1513 l
250.7976 176.7634 l
S
0 J
/DeviceGray {} cs
[0] sc
[1 0 0 1 0 0] Tm
0 0 Td
160.9834 165.2413 Td
/F14_0 12 Tf
(Tolerance Zone) 93.636 Tj
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font T3_14_0
%%EOF

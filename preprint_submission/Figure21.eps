%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 7.11.1.866 (R2010b) Service Pack 1. Operating System: Linux 2.6.32-220.4.1.el6.x86_64 #1 SMP Mon Jan 23 17:20:44 CST 2012 x86_64.
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 595 842
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2004 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  3 1 roll 2 array astore
  /setpagedevice where {
    pop 3 dict begin
      /PageSize exch def
      /ImagingBBox null def
      /Policies 1 dict dup begin /PageSize 3 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/cshow where {
  pop
  /cshow2 {
    dup {
      pop pop
      1 string dup 0 3 index put 3 index exec
    } exch cshow
    pop pop
  } def
}{
  /cshow2 {
    currentfont /FontType get 0 eq {
      0 2 2 index length 1 sub {
        2 copy get exch 1 add 2 index exch get
        2 copy exch 256 mul add
        2 string dup 0 6 5 roll put dup 1 5 4 roll put
        3 index exec
      } for
    } {
      dup {
        1 string dup 0 3 index put 3 index exec
      } forall
    } ifelse
    pop pop
  } def
} ifelse
/awcp {
  exch {
    false charpath
    5 index 5 index rmoveto
    6 index eq { 7 index 7 index rmoveto } if
  } exch cshow2
  6 {pop} repeat
} def
/Tj {
  fCol
  1 index stringwidth pdfTextMat idtransform pop
  sub 1 index length dup 0 ne { div } { pop pop 0 } ifelse
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16 {
  fCol
  2 index stringwidth pdfTextMat idtransform pop
  sub exch div
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16V {
  fCol
  2 index stringwidth pdfTextMat idtransform exch pop
  sub exch div
  0 pdfWordSpacing pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing add 0 exch
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj1 {
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 8 2 roll
  pdfTextRender 1 and 0 eq {
    6 copy awidthshow
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    7 index 7 index moveto
    6 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    false awcp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    8 6 roll moveto
    false awcp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    8 {pop} repeat
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { pdfFontSize 0.001 mul mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { pdfFontSize 0.001 mul mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2 image operators
/pdfImBuf 100 string def
/pdfIm {
  image
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfImM {
  fCol imagemask
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
/F8_0 /Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /quoteleft/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/exclamdown/cent/sterling/fraction/yen/florin/section
  /currency/quotesingle/quotedblleft/guillemotleft/guilsinglleft/guilsinglright/fi/fl
  /.notdef/endash/dagger/daggerdbl/periodcentered/.notdef/paragraph/bullet
  /quotesinglbase/quotedblbase/quotedblright/guillemotright/ellipsis/perthousand/.notdef/questiondown
  /.notdef/grave/acute/circumflex/tilde/macron/breve/dotaccent
  /dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut/ogonek/caron
  /emdash/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/AE/.notdef/ordfeminine/.notdef/.notdef/.notdef/.notdef
  /Lslash/Oslash/OE/ordmasculine/.notdef/.notdef/.notdef/.notdef
  /.notdef/ae/.notdef/.notdef/.notdef/dotlessi/.notdef/.notdef
  /lslash/oslash/oe/germandbls/.notdef/.notdef/.notdef/.notdef]
pdfMakeFont
%%EndSetup
pdfStartPage
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
0 1288 5950 5840 re
W
5 w
1 j
/DeviceGray {} CS
[1] SC
1392 4840 2624 2232 re
S
/DeviceGray {} CS
[0] SC
1392 4840 m
4016 4840 l
S
1392 7072 m
4016 7072 l
S
1392 4840 m
1392 7072 l
S
4016 4840 m
4016 7072 l
S
1392 4840 m
4016 4840 l
S
1392 4840 m
1392 7072 l
S
1392 4840 m
1392 4872 l
S
1392 7072 m
1392 7048 l
S
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 136.8 472] Tm
0 0 Td
/F8_0 10 Tf
(1) 5.56 Tj
Q
1912 4840 m
1912 4872 l
S
1912 7072 m
1912 7048 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 188.8 472] Tm
0 0 Td
/F8_0 10 Tf
(2) 5.56 Tj
Q
2440 4840 m
2440 4872 l
S
2440 7072 m
2440 7048 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 241.6 472] Tm
0 0 Td
/F8_0 10 Tf
(3) 5.56 Tj
Q
2960 4840 m
2960 4872 l
S
2960 7072 m
2960 7048 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 293.6 472] Tm
0 0 Td
/F8_0 10 Tf
(4) 5.56 Tj
Q
3488 4840 m
3488 4872 l
S
3488 7072 m
3488 7048 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 346.4 472] Tm
0 0 Td
/F8_0 10 Tf
(5) 5.56 Tj
Q
4016 4840 m
4016 4872 l
S
4016 7072 m
4016 7048 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 399.2 472] Tm
0 0 Td
/F8_0 10 Tf
(6) 5.56 Tj
Q
1392 4840 m
1416 4840 l
S
4016 4840 m
3984 4840 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 124.8 480.8] Tm
0 0 Td
/F8_0 10 Tf
(50) 11.12 Tj
Q
1392 5064 m
1416 5064 l
S
4016 5064 m
3984 5064 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 119.2 503.2] Tm
0 0 Td
/F8_0 10 Tf
(100) 16.68 Tj
Q
1392 5288 m
1416 5288 l
S
4016 5288 m
3984 5288 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 119.2 525.6] Tm
0 0 Td
/F8_0 10 Tf
(150) 16.68 Tj
Q
1392 5512 m
1416 5512 l
S
4016 5512 m
3984 5512 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 119.2 548] Tm
0 0 Td
/F8_0 10 Tf
(200) 16.68 Tj
Q
1392 5736 m
1416 5736 l
S
4016 5736 m
3984 5736 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 119.2 570.4] Tm
0 0 Td
/F8_0 10 Tf
(250) 16.68 Tj
Q
1392 5960 m
1416 5960 l
S
4016 5960 m
3984 5960 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 119.2 592.8] Tm
0 0 Td
/F8_0 10 Tf
(300) 16.68 Tj
Q
1392 6184 m
1416 6184 l
S
4016 6184 m
3984 6184 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 119.2 615.2] Tm
0 0 Td
/F8_0 10 Tf
(350) 16.68 Tj
Q
1392 6408 m
1416 6408 l
S
4016 6408 m
3984 6408 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 119.2 637.6] Tm
0 0 Td
/F8_0 10 Tf
(400) 16.68 Tj
Q
1392 6632 m
1416 6632 l
S
4016 6632 m
3984 6632 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 119.2 660] Tm
0 0 Td
/F8_0 10 Tf
(450) 16.68 Tj
Q
1392 6856 m
1416 6856 l
S
4016 6856 m
3984 6856 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 119.2 682.4] Tm
0 0 Td
/F8_0 10 Tf
(500) 16.68 Tj
Q
1392 7072 m
1416 7072 l
S
4016 7072 m
3984 7072 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 119.2 704] Tm
0 0 Td
/F8_0 10 Tf
(550) 16.68 Tj
Q
1392 4840 m
4016 4840 l
S
1392 7072 m
4016 7072 l
S
1392 4840 m
1392 7072 l
S
4016 4840 m
4016 7072 l
S
Q
q
1392 4832 2632 2240 re
W
5 w
1 j
/DeviceRGB {} CS
[0 0 1] SC
1392 4848 m
1912 4872 l
2440 4896 l
2960 4928 l
3488 4976 l
4016 5024 l
S
Q
q
1320 4776 2768 312 re
W
5 w
1 j
/DeviceRGB {} CS
[0 0 1] SC
1416 4848 m
1416 4834.75 1405.25 4824 1392 4824 c
1378.75 4824 1368 4834.75 1368 4848 c
1368 4861.25 1378.75 4872 1392 4872 c
1405.25 4872 1416 4861.25 1416 4848 c
S
1936 4872 m
1936 4858.75 1925.25 4848 1912 4848 c
1898.75 4848 1888 4858.75 1888 4872 c
1888 4885.25 1898.75 4896 1912 4896 c
1925.25 4896 1936 4885.25 1936 4872 c
S
2464 4896 m
2464 4882.75 2453.25 4872 2440 4872 c
2426.75 4872 2416 4882.75 2416 4896 c
2416 4909.25 2426.75 4920 2440 4920 c
2453.25 4920 2464 4909.25 2464 4896 c
S
2984 4928 m
2984 4914.75 2973.25 4904 2960 4904 c
2946.75 4904 2936 4914.75 2936 4928 c
2936 4941.25 2946.75 4952 2960 4952 c
2973.25 4952 2984 4941.25 2984 4928 c
S
3512 4976 m
3512 4962.75 3501.25 4952 3488 4952 c
3474.75 4952 3464 4962.75 3464 4976 c
3464 4989.25 3474.75 5000 3488 5000 c
3501.25 5000 3512 4989.25 3512 4976 c
S
4040 5024 m
4040 5010.75 4029.25 5000 4016 5000 c
4002.75 5000 3992 5010.75 3992 5024 c
3992 5037.25 4002.75 5048 4016 5048 c
4029.25 5048 4040 5037.25 4040 5024 c
S
Q
q
1392 4832 2632 2240 re
W
5 w
1 j
/DeviceRGB {} CS
[0 0.5 0] SC
1392 5504 m
1912 5520 l
2440 5520 l
2960 5544 l
3488 5584 l
4016 5656 l
S
Q
q
1320 5432 2768 296 re
W
5 w
/DeviceRGB {} CS
[0 0.5 0] SC
1368 5480 48 48 re
S
1888 5496 48 48 re
S
2416 5496 48 48 re
S
2936 5520 48 48 re
S
3464 5560 48 48 re
S
3992 5632 48 48 re
S
Q
q
1392 4832 2632 2240 re
W
5 w
1 j
/DeviceRGB {} CS
[1 0 0] SC
1392 6168 m
1912 6192 l
2440 6224 l
2960 6256 l
3488 6336 l
4016 6440 l
S
Q
q
1320 6096 2768 408 re
W
5 w
1 j
/DeviceRGB {} CS
[1 0 0] SC
1368 6168 m
1416 6168 l
S
1392 6192 m
1392 6144 l
S
1888 6192 m
1936 6192 l
S
1912 6216 m
1912 6168 l
S
2416 6224 m
2464 6224 l
S
2440 6248 m
2440 6200 l
S
2936 6256 m
2984 6256 l
S
2960 6280 m
2960 6232 l
S
3464 6336 m
3512 6336 l
S
3488 6360 m
3488 6312 l
S
3992 6440 m
4040 6440 l
S
4016 6464 m
4016 6416 l
S
Q
q
1392 4832 2632 2240 re
W
5 w
1 j
/DeviceRGB {} CS
[0 0.75 0.75] SC
1392 6624 m
1912 6656 l
2440 6696 l
2960 6736 l
3488 6840 l
4016 6952 l
S
Q
q
1320 6544 2768 472 re
W
5 w
/DeviceRGB {} CS
[0 0.75 0.75] SC
1392 6600 m
1416 6640 l
1368 6640 l
1392 6600 l
h
S
1912 6632 m
1936 6672 l
1888 6672 l
1912 6632 l
h
S
2440 6672 m
2464 6712 l
2416 6712 l
2440 6672 l
h
S
2960 6712 m
2984 6752 l
2936 6752 l
2960 6712 l
h
S
3488 6816 m
3512 6856 l
3464 6856 l
3488 6816 l
h
S
4016 6928 m
4040 6968 l
3992 6968 l
4016 6928 l
h
S
Q
q
0 1288 5950 5840 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 235.2 459.2] Tm
0 0 Td
/F8_0 10 Tf
(Number of QoS) 69.47 Tj
-13.6 -10.4 Td
(per CandidateService) 96.15 Tj
[0 1 -1 0 101.6 538.4] Tm
0 0 Td
/F8_0 10 Tf
(Time taken for Adaptation) 114.5 Tj
37.6 -10.4 Td
(\(in secs\)) 37.78 Tj
[1 0 0 1 137.6 479.2] Tm
0 0 Td
/F8_0 10 Tf
( ) 2.78 Tj
263.2 224 Td
( ) 2.78 Tj
Q
/DeviceGray {} cs
[1] sc
4096 6376 872 600 re
f*
5 w
1 j
/DeviceGray {} CS
[1] SC
4096 6376 872 600 re
S
/DeviceGray {} CS
[0] SC
4096 6376 m
4968 6376 l
S
4096 6976 m
4968 6976 l
S
4096 6376 m
4096 6976 l
S
4968 6376 m
4968 6976 l
S
4096 6376 m
4968 6376 l
S
4096 6376 m
4096 6976 l
S
4096 6376 m
4968 6376 l
S
4096 6976 m
4968 6976 l
S
4096 6376 m
4096 6976 l
S
4968 6376 m
4968 6976 l
S
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 448.8 684.8] Tm
0 0 Td
/F8_0 10 Tf
(1 Market) 38.9 Tj
Q
Q
q
4096 6368 880 608 re
W
5 w
1 j
/DeviceRGB {} CS
[0 0 1] SC
4152 6888 m
4448 6888 l
S
Q
q
4232 6816 144 144 re
W
5 w
1 j
/DeviceRGB {} CS
[0 0 1] SC
4328 6888 m
4328 6874.75 4317.25 6864 4304 6864 c
4290.75 6864 4280 6874.75 4280 6888 c
4280 6901.25 4290.75 6912 4304 6912 c
4317.25 6912 4328 6901.25 4328 6888 c
S
Q
q
0 1288 5950 5840 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 448.8 670.4] Tm
0 0 Td
/F8_0 10 Tf
(4 Markets) 43.9 Tj
Q
Q
q
4096 6368 880 608 re
W
5 w
1 j
/DeviceRGB {} CS
[0 0.5 0] SC
4152 6752 m
4448 6752 l
S
Q
q
4232 6672 144 144 re
W
5 w
/DeviceRGB {} CS
[0 0.5 0] SC
4280 6728 48 48 re
S
Q
q
0 1288 5950 5840 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 448.8 656] Tm
0 0 Td
/F8_0 10 Tf
(7 Markets) 43.9 Tj
Q
Q
q
4096 6368 880 608 re
W
5 w
1 j
/DeviceRGB {} CS
[1 0 0] SC
4152 6608 m
4448 6608 l
S
Q
q
4232 6536 144 144 re
W
5 w
1 j
/DeviceRGB {} CS
[1 0 0] SC
4280 6608 m
4328 6608 l
S
4304 6632 m
4304 6584 l
S
Q
q
0 1288 5950 5840 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 448.8 641.6] Tm
0 0 Td
/F8_0 10 Tf
(9 Markets) 43.9 Tj
Q
Q
q
4096 6368 880 608 re
W
5 w
1 j
/DeviceRGB {} CS
[0 0.75 0.75] SC
4152 6472 m
4448 6472 l
S
Q
q
4232 6392 144 144 re
W
5 w
/DeviceRGB {} CS
[0 0.75 0.75] SC
4304 6448 m
4328 6488 l
4280 6488 l
4304 6448 l
h
S
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%EOF

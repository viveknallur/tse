%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 7.11.1.866 (R2010b) Service Pack 1. Operating System: Linux 2.6.32-220.2.1.el6.x86_64 #1 SMP Thu Dec 22 11:15:52 CST 2011 x86_64.
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 595 842
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2004 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  3 1 roll 2 array astore
  /setpagedevice where {
    pop 3 dict begin
      /PageSize exch def
      /ImagingBBox null def
      /Policies 1 dict dup begin /PageSize 3 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/cshow where {
  pop
  /cshow2 {
    dup {
      pop pop
      1 string dup 0 3 index put 3 index exec
    } exch cshow
    pop pop
  } def
}{
  /cshow2 {
    currentfont /FontType get 0 eq {
      0 2 2 index length 1 sub {
        2 copy get exch 1 add 2 index exch get
        2 copy exch 256 mul add
        2 string dup 0 6 5 roll put dup 1 5 4 roll put
        3 index exec
      } for
    } {
      dup {
        1 string dup 0 3 index put 3 index exec
      } forall
    } ifelse
    pop pop
  } def
} ifelse
/awcp {
  exch {
    false charpath
    5 index 5 index rmoveto
    6 index eq { 7 index 7 index rmoveto } if
  } exch cshow2
  6 {pop} repeat
} def
/Tj {
  fCol
  1 index stringwidth pdfTextMat idtransform pop
  sub 1 index length dup 0 ne { div } { pop pop 0 } ifelse
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16 {
  fCol
  2 index stringwidth pdfTextMat idtransform pop
  sub exch div
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16V {
  fCol
  2 index stringwidth pdfTextMat idtransform exch pop
  sub exch div
  0 pdfWordSpacing pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing add 0 exch
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj1 {
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 8 2 roll
  pdfTextRender 1 and 0 eq {
    6 copy awidthshow
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    7 index 7 index moveto
    6 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    false awcp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    8 6 roll moveto
    false awcp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    8 {pop} repeat
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { pdfFontSize 0.001 mul mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { pdfFontSize 0.001 mul mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2 image operators
/pdfImBuf 100 string def
/pdfIm {
  image
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfImM {
  fCol imagemask
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
/F8_0 /Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /quoteleft/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/exclamdown/cent/sterling/fraction/yen/florin/section
  /currency/quotesingle/quotedblleft/guillemotleft/guilsinglleft/guilsinglright/fi/fl
  /.notdef/endash/dagger/daggerdbl/periodcentered/.notdef/paragraph/bullet
  /quotesinglbase/quotedblbase/quotedblright/guillemotright/ellipsis/perthousand/.notdef/questiondown
  /.notdef/grave/acute/circumflex/tilde/macron/breve/dotaccent
  /dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut/ogonek/caron
  /emdash/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/AE/.notdef/ordfeminine/.notdef/.notdef/.notdef/.notdef
  /Lslash/Oslash/OE/ordmasculine/.notdef/.notdef/.notdef/.notdef
  /.notdef/ae/.notdef/.notdef/.notdef/dotlessi/.notdef/.notdef
  /lslash/oslash/oe/germandbls/.notdef/.notdef/.notdef/.notdef]
pdfMakeFont
%%EndSetup
pdfStartPage
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
0 1704 5950 4992 re
W
5 w
1 j
/DeviceGray {} CS
[1] SC
1336 4304 3752 2288 re
S
/DeviceGray {} CS
[0] SC
1336 4304 m
5088 4304 l
S
1336 6592 m
5088 6592 l
S
1336 4304 m
1336 6592 l
S
5088 4304 m
5088 6592 l
S
1336 4304 m
5088 4304 l
S
1336 4304 m
1336 6592 l
S
1336 4304 m
1336 4344 l
S
1336 6592 m
1336 6560 l
S
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 131.2 418.4] Tm
0 0 Td
/F8_0 10 Tf
(1) 5.56 Tj
Q
1752 4304 m
1752 4344 l
S
1752 6592 m
1752 6560 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 172.8 418.4] Tm
0 0 Td
/F8_0 10 Tf
(2) 5.56 Tj
Q
2168 4304 m
2168 4344 l
S
2168 6592 m
2168 6560 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 214.4 418.4] Tm
0 0 Td
/F8_0 10 Tf
(3) 5.56 Tj
Q
2584 4304 m
2584 4344 l
S
2584 6592 m
2584 6560 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 256 418.4] Tm
0 0 Td
/F8_0 10 Tf
(4) 5.56 Tj
Q
3000 4304 m
3000 4344 l
S
3000 6592 m
3000 6560 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 297.6 418.4] Tm
0 0 Td
/F8_0 10 Tf
(5) 5.56 Tj
Q
3416 4304 m
3416 4344 l
S
3416 6592 m
3416 6560 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 339.2 418.4] Tm
0 0 Td
/F8_0 10 Tf
(6) 5.56 Tj
Q
3832 4304 m
3832 4344 l
S
3832 6592 m
3832 6560 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 380.8 418.4] Tm
0 0 Td
/F8_0 10 Tf
(7) 5.56 Tj
Q
4248 4304 m
4248 4344 l
S
4248 6592 m
4248 6560 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 422.4 418.4] Tm
0 0 Td
/F8_0 10 Tf
(8) 5.56 Tj
Q
4664 4304 m
4664 4344 l
S
4664 6592 m
4664 6560 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 464 418.4] Tm
0 0 Td
/F8_0 10 Tf
(9) 5.56 Tj
Q
5088 4304 m
5088 4344 l
S
5088 6592 m
5088 6560 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 503.2 418.4] Tm
0 0 Td
/F8_0 10 Tf
(10) 11.12 Tj
Q
1336 4304 m
1368 4304 l
S
5088 4304 m
5048 4304 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 124.8 427.2] Tm
0 0 Td
/F8_0 10 Tf
(0) 5.56 Tj
Q
1336 4592 m
1368 4592 l
S
5088 4592 m
5048 4592 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 119.2 456] Tm
0 0 Td
/F8_0 10 Tf
(50) 11.12 Tj
Q
1336 4880 m
1368 4880 l
S
5088 4880 m
5048 4880 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 113.6 484.8] Tm
0 0 Td
/F8_0 10 Tf
(100) 16.68 Tj
Q
1336 5168 m
1368 5168 l
S
5088 5168 m
5048 5168 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 113.6 513.6] Tm
0 0 Td
/F8_0 10 Tf
(150) 16.68 Tj
Q
1336 5448 m
1368 5448 l
S
5088 5448 m
5048 5448 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 113.6 541.6] Tm
0 0 Td
/F8_0 10 Tf
(200) 16.68 Tj
Q
1336 5736 m
1368 5736 l
S
5088 5736 m
5048 5736 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 113.6 570.4] Tm
0 0 Td
/F8_0 10 Tf
(250) 16.68 Tj
Q
1336 6024 m
1368 6024 l
S
5088 6024 m
5048 6024 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 113.6 599.2] Tm
0 0 Td
/F8_0 10 Tf
(300) 16.68 Tj
Q
1336 6312 m
1368 6312 l
S
5088 6312 m
5048 6312 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 113.6 628] Tm
0 0 Td
/F8_0 10 Tf
(350) 16.68 Tj
Q
1336 6592 m
1368 6592 l
S
5088 6592 m
5048 6592 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 113.6 656] Tm
0 0 Td
/F8_0 10 Tf
(400) 16.68 Tj
Q
1336 4304 m
5088 4304 l
S
1336 6592 m
5088 6592 l
S
1336 4304 m
1336 6592 l
S
5088 4304 m
5088 6592 l
S
Q
q
1336 4296 3760 2296 re
W
5 w
1 j
/DeviceRGB {} CS
[0 0 1] SC
1336 4304 m
1752 4320 l
2168 4336 l
2584 4360 l
3000 4384 l
3416 4440 l
3832 4480 l
4248 4536 l
4664 4592 l
5088 4656 l
S
Q
q
1264 4232 3896 496 re
W
5 w
1 j
/DeviceRGB {} CS
[0 0 1] SC
1360 4304 m
1360 4290.75 1349.25 4280 1336 4280 c
1322.75 4280 1312 4290.75 1312 4304 c
1312 4317.25 1322.75 4328 1336 4328 c
1349.25 4328 1360 4317.25 1360 4304 c
S
1776 4320 m
1776 4306.75 1765.25 4296 1752 4296 c
1738.75 4296 1728 4306.75 1728 4320 c
1728 4333.25 1738.75 4344 1752 4344 c
1765.25 4344 1776 4333.25 1776 4320 c
S
2192 4336 m
2192 4322.75 2181.25 4312 2168 4312 c
2154.75 4312 2144 4322.75 2144 4336 c
2144 4349.25 2154.75 4360 2168 4360 c
2181.25 4360 2192 4349.25 2192 4336 c
S
2608 4360 m
2608 4346.75 2597.25 4336 2584 4336 c
2570.75 4336 2560 4346.75 2560 4360 c
2560 4373.25 2570.75 4384 2584 4384 c
2597.25 4384 2608 4373.25 2608 4360 c
S
3024 4384 m
3024 4370.75 3013.25 4360 3000 4360 c
2986.75 4360 2976 4370.75 2976 4384 c
2976 4397.25 2986.75 4408 3000 4408 c
3013.25 4408 3024 4397.25 3024 4384 c
S
3440 4440 m
3440 4426.75 3429.25 4416 3416 4416 c
3402.75 4416 3392 4426.75 3392 4440 c
3392 4453.25 3402.75 4464 3416 4464 c
3429.25 4464 3440 4453.25 3440 4440 c
S
3856 4480 m
3856 4466.75 3845.25 4456 3832 4456 c
3818.75 4456 3808 4466.75 3808 4480 c
3808 4493.25 3818.75 4504 3832 4504 c
3845.25 4504 3856 4493.25 3856 4480 c
S
4272 4536 m
4272 4522.75 4261.25 4512 4248 4512 c
4234.75 4512 4224 4522.75 4224 4536 c
4224 4549.25 4234.75 4560 4248 4560 c
4261.25 4560 4272 4549.25 4272 4536 c
S
4688 4592 m
4688 4578.75 4677.25 4568 4664 4568 c
4650.75 4568 4640 4578.75 4640 4592 c
4640 4605.25 4650.75 4616 4664 4616 c
4677.25 4616 4688 4605.25 4688 4592 c
S
5112 4656 m
5112 4642.75 5101.25 4632 5088 4632 c
5074.75 4632 5064 4642.75 5064 4656 c
5064 4669.25 5074.75 4680 5088 4680 c
5101.25 4680 5112 4669.25 5112 4656 c
S
Q
q
1336 4296 3760 2296 re
W
5 w
1 j
/DeviceRGB {} CS
[0 0.5 0] SC
1336 4312 m
1752 4352 l
2168 4392 l
2584 4472 l
3000 4568 l
3416 4736 l
3832 4888 l
4248 5072 l
4664 5256 l
5088 5496 l
S
Q
q
1264 4240 3896 1328 re
W
5 w
/DeviceRGB {} CS
[0 0.5 0] SC
1312 4288 48 48 re
S
1728 4328 48 48 re
S
2144 4368 48 48 re
S
2560 4448 48 48 re
S
2976 4544 48 48 re
S
3392 4712 48 48 re
S
3808 4864 48 48 re
S
4224 5048 48 48 re
S
4640 5232 48 48 re
S
5064 5472 48 48 re
S
Q
q
1336 4296 3760 2296 re
W
5 w
1 j
/DeviceRGB {} CS
[1 0 0] SC
1336 4328 m
1752 4384 l
2168 4472 l
2584 4600 l
3000 4856 l
3416 5088 l
3832 5352 l
4248 5736 l
4664 6080 l
5088 6544 l
S
Q
q
1264 4248 3896 2360 re
W
5 w
/DeviceRGB {} CS
[1 0 0] SC
1336 4304 m
1360 4344 l
1312 4344 l
1336 4304 l
h
S
1752 4360 m
1776 4400 l
1728 4400 l
1752 4360 l
h
S
2168 4448 m
2192 4488 l
2144 4488 l
2168 4448 l
h
S
2584 4576 m
2608 4616 l
2560 4616 l
2584 4576 l
h
S
3000 4832 m
3024 4872 l
2976 4872 l
3000 4832 l
h
S
3416 5064 m
3440 5104 l
3392 5104 l
3416 5064 l
h
S
3832 5328 m
3856 5368 l
3808 5368 l
3832 5328 l
h
S
4248 5712 m
4272 5752 l
4224 5752 l
4248 5712 l
h
S
4664 6056 m
4688 6096 l
4640 6096 l
4664 6056 l
h
S
5088 6520 m
5112 6560 l
5064 6560 l
5088 6520 l
h
S
Q
q
0 1704 5950 4992 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 255.2 405.6] Tm
0 0 Td
/F8_0 10 Tf
(AbstractServices in Workflow) 129.47 Tj
[0 1 -1 0 96 513.6] Tm
0 0 Td
/F8_0 10 Tf
(Time to adapt) 61.14 Tj
3.2 -10.4 Td
(\(in seconds\)) 54.46 Tj
[1 0 0 1 132 425.6] Tm
0 0 Td
/F8_0 10 Tf
( ) 2.78 Tj
376 229.6 Td
( ) 2.78 Tj
Q
/DeviceGray {} cs
[1] sc
1520 5968 2344 456 re
f*
5 w
1 j
/DeviceGray {} CS
[1] SC
1520 5968 2344 456 re
S
/DeviceGray {} CS
[0] SC
1520 5968 m
3864 5968 l
S
1520 6424 m
3864 6424 l
S
1520 5968 m
1520 6424 l
S
3864 5968 m
3864 6424 l
S
1520 5968 m
3864 5968 l
S
1520 5968 m
1520 6424 l
S
1520 5968 m
3864 5968 l
S
1520 6424 m
3864 6424 l
S
1520 5968 m
1520 6424 l
S
3864 5968 m
3864 6424 l
S
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 191.2 629.6] Tm
0 0 Td
/F8_0 10 Tf
(10 CandidateServices per AbstractService) 187.85 Tj
Q
Q
q
1520 5960 2352 464 re
W
5 w
1 j
/DeviceRGB {} CS
[0 0 1] SC
1576 6344 m
1872 6344 l
S
Q
q
1656 6264 144 144 re
W
5 w
1 j
/DeviceRGB {} CS
[0 0 1] SC
1752 6344 m
1752 6330.75 1741.25 6320 1728 6320 c
1714.75 6320 1704 6330.75 1704 6344 c
1704 6357.25 1714.75 6368 1728 6368 c
1741.25 6368 1752 6357.25 1752 6344 c
S
Q
q
0 1704 5950 4992 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 191.2 615.2] Tm
0 0 Td
/F8_0 10 Tf
(30 CandidateServices per AbstractService) 187.85 Tj
Q
Q
q
1520 5960 2352 464 re
W
5 w
1 j
/DeviceRGB {} CS
[0 0.5 0] SC
1576 6200 m
1872 6200 l
S
Q
q
1656 6120 144 144 re
W
5 w
/DeviceRGB {} CS
[0 0.5 0] SC
1704 6176 48 48 re
S
Q
q
0 1704 5950 4992 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 191.2 600.8] Tm
0 0 Td
/F8_0 10 Tf
(50 CandidateServices per AbstractService) 187.85 Tj
Q
Q
q
1520 5960 2352 464 re
W
5 w
1 j
/DeviceRGB {} CS
[1 0 0] SC
1576 6056 m
1872 6056 l
S
Q
q
1656 5984 144 144 re
W
5 w
/DeviceRGB {} CS
[1 0 0] SC
1728 6032 m
1752 6072 l
1704 6072 l
1728 6032 l
h
S
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%EOF

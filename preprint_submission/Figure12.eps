%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 7.11.1.866 (R2010b) Service Pack 1. Operating System: Linux 2.6.32-220.2.1.el6.x86_64 #1 SMP Thu Dec 22 11:15:52 CST 2011 x86_64.
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 595 842
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2004 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  3 1 roll 2 array astore
  /setpagedevice where {
    pop 3 dict begin
      /PageSize exch def
      /ImagingBBox null def
      /Policies 1 dict dup begin /PageSize 3 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/cshow where {
  pop
  /cshow2 {
    dup {
      pop pop
      1 string dup 0 3 index put 3 index exec
    } exch cshow
    pop pop
  } def
}{
  /cshow2 {
    currentfont /FontType get 0 eq {
      0 2 2 index length 1 sub {
        2 copy get exch 1 add 2 index exch get
        2 copy exch 256 mul add
        2 string dup 0 6 5 roll put dup 1 5 4 roll put
        3 index exec
      } for
    } {
      dup {
        1 string dup 0 3 index put 3 index exec
      } forall
    } ifelse
    pop pop
  } def
} ifelse
/awcp {
  exch {
    false charpath
    5 index 5 index rmoveto
    6 index eq { 7 index 7 index rmoveto } if
  } exch cshow2
  6 {pop} repeat
} def
/Tj {
  fCol
  1 index stringwidth pdfTextMat idtransform pop
  sub 1 index length dup 0 ne { div } { pop pop 0 } ifelse
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16 {
  fCol
  2 index stringwidth pdfTextMat idtransform pop
  sub exch div
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16V {
  fCol
  2 index stringwidth pdfTextMat idtransform exch pop
  sub exch div
  0 pdfWordSpacing pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing add 0 exch
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj1 {
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 8 2 roll
  pdfTextRender 1 and 0 eq {
    6 copy awidthshow
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    7 index 7 index moveto
    6 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    false awcp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    8 6 roll moveto
    false awcp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    8 {pop} repeat
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { pdfFontSize 0.001 mul mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { pdfFontSize 0.001 mul mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2 image operators
/pdfImBuf 100 string def
/pdfIm {
  image
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfImM {
  fCol imagemask
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
/F8_0 /Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /quoteleft/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/exclamdown/cent/sterling/fraction/yen/florin/section
  /currency/quotesingle/quotedblleft/guillemotleft/guilsinglleft/guilsinglright/fi/fl
  /.notdef/endash/dagger/daggerdbl/periodcentered/.notdef/paragraph/bullet
  /quotesinglbase/quotedblbase/quotedblright/guillemotright/ellipsis/perthousand/.notdef/questiondown
  /.notdef/grave/acute/circumflex/tilde/macron/breve/dotaccent
  /dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut/ogonek/caron
  /emdash/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/AE/.notdef/ordfeminine/.notdef/.notdef/.notdef/.notdef
  /Lslash/Oslash/OE/ordmasculine/.notdef/.notdef/.notdef/.notdef
  /.notdef/ae/.notdef/.notdef/.notdef/dotlessi/.notdef/.notdef
  /lslash/oslash/oe/germandbls/.notdef/.notdef/.notdef/.notdef]
pdfMakeFont
%%EndSetup
pdfStartPage
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
0 1656 5950 5088 re
W
5 w
1 j
/DeviceGray {} CS
[1] SC
1360 4288 3600 2376 re
S
/DeviceGray {} CS
[0] SC
1360 4288 m
4960 4288 l
S
1360 6664 m
4960 6664 l
S
1360 4288 m
1360 6664 l
S
4960 4288 m
4960 6664 l
S
1360 4288 m
4960 4288 l
S
1360 4288 m
1360 6664 l
S
1360 4288 m
1360 4328 l
S
1360 6664 m
1360 6632 l
S
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 130.4 416.8] Tm
0 0 Td
/F8_0 10 Tf
(10) 11.12 Tj
Q
1808 4288 m
1808 4328 l
S
1808 6664 m
1808 6632 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 175.2 416.8] Tm
0 0 Td
/F8_0 10 Tf
(15) 11.12 Tj
Q
2256 4288 m
2256 4328 l
S
2256 6664 m
2256 6632 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 220 416.8] Tm
0 0 Td
/F8_0 10 Tf
(20) 11.12 Tj
Q
2704 4288 m
2704 4328 l
S
2704 6664 m
2704 6632 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 264.8 416.8] Tm
0 0 Td
/F8_0 10 Tf
(25) 11.12 Tj
Q
3160 4288 m
3160 4328 l
S
3160 6664 m
3160 6632 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 310.4 416.8] Tm
0 0 Td
/F8_0 10 Tf
(30) 11.12 Tj
Q
3608 4288 m
3608 4328 l
S
3608 6664 m
3608 6632 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 355.2 416.8] Tm
0 0 Td
/F8_0 10 Tf
(35) 11.12 Tj
Q
4056 4288 m
4056 4328 l
S
4056 6664 m
4056 6632 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 400 416.8] Tm
0 0 Td
/F8_0 10 Tf
(40) 11.12 Tj
Q
4504 4288 m
4504 4328 l
S
4504 6664 m
4504 6632 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 444.8 416.8] Tm
0 0 Td
/F8_0 10 Tf
(45) 11.12 Tj
Q
4960 4288 m
4960 4328 l
S
4960 6664 m
4960 6632 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 490.4 416.8] Tm
0 0 Td
/F8_0 10 Tf
(50) 11.12 Tj
Q
1360 4288 m
1392 4288 l
S
4960 4288 m
4920 4288 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 127.2 425.6] Tm
0 0 Td
/F8_0 10 Tf
(0) 5.56 Tj
Q
1360 4592 m
1392 4592 l
S
4960 4592 m
4920 4592 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 121.6 456] Tm
0 0 Td
/F8_0 10 Tf
(50) 11.12 Tj
Q
1360 4888 m
1392 4888 l
S
4960 4888 m
4920 4888 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 116 485.6] Tm
0 0 Td
/F8_0 10 Tf
(100) 16.68 Tj
Q
1360 5184 m
1392 5184 l
S
4960 5184 m
4920 5184 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 116 515.2] Tm
0 0 Td
/F8_0 10 Tf
(150) 16.68 Tj
Q
1360 5480 m
1392 5480 l
S
4960 5480 m
4920 5480 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 116 544.8] Tm
0 0 Td
/F8_0 10 Tf
(200) 16.68 Tj
Q
1360 5776 m
1392 5776 l
S
4960 5776 m
4920 5776 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 116 574.4] Tm
0 0 Td
/F8_0 10 Tf
(250) 16.68 Tj
Q
1360 6072 m
1392 6072 l
S
4960 6072 m
4920 6072 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 116 604] Tm
0 0 Td
/F8_0 10 Tf
(300) 16.68 Tj
Q
1360 6368 m
1392 6368 l
S
4960 6368 m
4920 6368 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 116 633.6] Tm
0 0 Td
/F8_0 10 Tf
(350) 16.68 Tj
Q
1360 6664 m
1392 6664 l
S
4960 6664 m
4920 6664 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 116 663.2] Tm
0 0 Td
/F8_0 10 Tf
(400) 16.68 Tj
Q
1360 4288 m
4960 4288 l
S
1360 6664 m
4960 6664 l
S
1360 4288 m
1360 6664 l
S
4960 4288 m
4960 6664 l
S
Q
q
1360 4280 3608 2384 re
W
5 w
1 j
/DeviceRGB {} CS
[0 0 1] SC
1360 4288 m
2256 4296 l
3160 4296 l
4056 4304 l
4960 4312 l
S
Q
q
1288 4216 3744 160 re
W
5 w
1 j
/DeviceRGB {} CS
[0 0 1] SC
1384 4288 m
1384 4274.75 1373.25 4264 1360 4264 c
1346.75 4264 1336 4274.75 1336 4288 c
1336 4301.25 1346.75 4312 1360 4312 c
1373.25 4312 1384 4301.25 1384 4288 c
S
2280 4296 m
2280 4282.75 2269.25 4272 2256 4272 c
2242.75 4272 2232 4282.75 2232 4296 c
2232 4309.25 2242.75 4320 2256 4320 c
2269.25 4320 2280 4309.25 2280 4296 c
S
3184 4296 m
3184 4282.75 3173.25 4272 3160 4272 c
3146.75 4272 3136 4282.75 3136 4296 c
3136 4309.25 3146.75 4320 3160 4320 c
3173.25 4320 3184 4309.25 3184 4296 c
S
4080 4304 m
4080 4290.75 4069.25 4280 4056 4280 c
4042.75 4280 4032 4290.75 4032 4304 c
4032 4317.25 4042.75 4328 4056 4328 c
4069.25 4328 4080 4317.25 4080 4304 c
S
4984 4312 m
4984 4298.75 4973.25 4288 4960 4288 c
4946.75 4288 4936 4298.75 4936 4312 c
4936 4325.25 4946.75 4336 4960 4336 c
4973.25 4336 4984 4325.25 4984 4312 c
S
Q
q
1360 4280 3608 2384 re
W
5 w
1 j
/DeviceRGB {} CS
[0 0.5 0] SC
1360 4320 m
2256 4352 l
3160 4384 l
4056 4416 l
4960 4464 l
S
Q
q
1288 4240 3744 288 re
W
5 w
/DeviceRGB {} CS
[0 0.5 0] SC
1336 4296 48 48 re
S
2232 4328 48 48 re
S
3136 4360 48 48 re
S
4032 4392 48 48 re
S
4936 4440 48 48 re
S
Q
q
1360 4280 3608 2384 re
W
5 w
1 j
/DeviceRGB {} CS
[1 0 0] SC
1360 4376 m
2256 4464 l
3160 4560 l
4056 4664 l
4960 4864 l
S
Q
q
1288 4296 3744 632 re
W
5 w
/DeviceRGB {} CS
[1 0 0] SC
1360 4352 m
1384 4376 l
1360 4400 l
1336 4376 l
1360 4352 l
h
S
2256 4440 m
2280 4464 l
2256 4488 l
2232 4464 l
2256 4440 l
h
S
3160 4536 m
3184 4560 l
3160 4584 l
3136 4560 l
3160 4536 l
h
S
4056 4640 m
4080 4664 l
4056 4688 l
4032 4664 l
4056 4640 l
h
S
4960 4840 m
4984 4864 l
4960 4888 l
4936 4864 l
4960 4840 l
h
S
Q
q
1360 4280 3608 2384 re
W
5 w
1 j
/DeviceRGB {} CS
[0 0.75 0.75] SC
1360 4656 m
2256 5088 l
3160 5528 l
4056 6024 l
4960 6608 l
S
Q
q
1288 4576 3744 2104 re
W
5 w
/DeviceRGB {} CS
[0 0.75 0.75] SC
1344 4664 m
1360 4664 l
1360 4680 l
1360 4664 l
1376 4664 l
1368 4656 l
1376 4648 l
1360 4648 l
1360 4632 l
1360 4648 l
1344 4648 l
1352 4656 l
1344 4664 l
h
S
2240 5096 m
2256 5096 l
2256 5112 l
2256 5096 l
2272 5096 l
2264 5088 l
2272 5080 l
2256 5080 l
2256 5064 l
2256 5080 l
2240 5080 l
2248 5088 l
2240 5096 l
h
S
3144 5536 m
3160 5536 l
3160 5552 l
3160 5536 l
3176 5536 l
3168 5528 l
3176 5520 l
3160 5520 l
3160 5504 l
3160 5520 l
3144 5520 l
3152 5528 l
3144 5536 l
h
S
4040 6032 m
4056 6032 l
4056 6048 l
4056 6032 l
4072 6032 l
4064 6024 l
4072 6016 l
4056 6016 l
4056 6000 l
4056 6016 l
4040 6016 l
4048 6024 l
4040 6032 l
h
S
4944 6616 m
4960 6616 l
4960 6632 l
4960 6616 l
4976 6616 l
4968 6608 l
4976 6600 l
4960 6600 l
4960 6584 l
4960 6600 l
4944 6600 l
4952 6608 l
4944 6616 l
h
S
Q
q
0 1656 5950 5088 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 272.8 404] Tm
0 0 Td
/F8_0 10 Tf
(CandidateServices) 83.92 Tj
-1.6 -10.4 Td
(per AbstractService) 87.25 Tj
[0 1 -1 0 98.4 516.8] Tm
0 0 Td
/F8_0 10 Tf
(Time to adapt) 61.14 Tj
3.2 -10.4 Td
(\(in seconds\)) 54.46 Tj
[1 0 0 1 134.4 424] Tm
0 0 Td
/F8_0 10 Tf
( ) 2.78 Tj
360.8 238.4 Td
( ) 2.78 Tj
Q
/DeviceGray {} cs
[1] sc
1544 5968 1360 600 re
f*
5 w
1 j
/DeviceGray {} CS
[1] SC
1544 5968 1360 600 re
S
/DeviceGray {} CS
[0] SC
1544 5968 m
2904 5968 l
S
1544 6568 m
2904 6568 l
S
1544 5968 m
1544 6568 l
S
2904 5968 m
2904 6568 l
S
1544 5968 m
2904 5968 l
S
1544 5968 m
1544 6568 l
S
1544 5968 m
2904 5968 l
S
1544 6568 m
2904 6568 l
S
1544 5968 m
1544 6568 l
S
2904 5968 m
2904 6568 l
S
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 194.4 644] Tm
0 0 Td
/F8_0 10 Tf
(1 AbstractService) 78.36 Tj
Q
Q
q
1544 5960 1368 608 re
W
5 w
1 j
/DeviceRGB {} CS
[0 0 1] SC
1600 6480 m
1904 6480 l
S
Q
q
1688 6408 144 144 re
W
5 w
1 j
/DeviceRGB {} CS
[0 0 1] SC
1776 6480 m
1776 6466.75 1765.25 6456 1752 6456 c
1738.75 6456 1728 6466.75 1728 6480 c
1728 6493.25 1738.75 6504 1752 6504 c
1765.25 6504 1776 6493.25 1776 6480 c
S
Q
q
0 1656 5950 5088 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 194.4 629.6] Tm
0 0 Td
/F8_0 10 Tf
(3 AbstractServices) 83.36 Tj
Q
Q
q
1544 5960 1368 608 re
W
5 w
1 j
/DeviceRGB {} CS
[0 0.5 0] SC
1600 6344 m
1904 6344 l
S
Q
q
1688 6264 144 144 re
W
5 w
/DeviceRGB {} CS
[0 0.5 0] SC
1728 6320 48 48 re
S
Q
q
0 1656 5950 5088 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 194.4 615.2] Tm
0 0 Td
/F8_0 10 Tf
(5 AbstractServices) 83.36 Tj
Q
Q
q
1544 5960 1368 608 re
W
5 w
1 j
/DeviceRGB {} CS
[1 0 0] SC
1600 6200 m
1904 6200 l
S
Q
q
1688 6128 144 144 re
W
5 w
/DeviceRGB {} CS
[1 0 0] SC
1752 6176 m
1776 6200 l
1752 6224 l
1728 6200 l
1752 6176 l
h
S
Q
q
0 1656 5950 5088 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 194.4 600.8] Tm
0 0 Td
/F8_0 10 Tf
(10 AbstractServices) 88.92 Tj
Q
Q
q
1544 5960 1368 608 re
W
5 w
1 j
/DeviceRGB {} CS
[0 0.75 0.75] SC
1600 6064 m
1904 6064 l
S
Q
q
1688 5984 144 144 re
W
5 w
/DeviceRGB {} CS
[0 0.75 0.75] SC
1736 6072 m
1752 6072 l
1752 6088 l
1752 6072 l
1768 6072 l
1760 6064 l
1768 6056 l
1752 6056 l
1752 6040 l
1752 6056 l
1736 6056 l
1744 6064 l
1736 6072 l
h
S
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%EOF

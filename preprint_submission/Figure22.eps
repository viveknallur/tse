%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 7.11.1.866 (R2010b) Service Pack 1. Operating System: Linux 2.6.32-220.4.1.el6.x86_64 #1 SMP Mon Jan 23 17:20:44 CST 2012 x86_64.
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 595 842
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2004 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  3 1 roll 2 array astore
  /setpagedevice where {
    pop 3 dict begin
      /PageSize exch def
      /ImagingBBox null def
      /Policies 1 dict dup begin /PageSize 3 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/cshow where {
  pop
  /cshow2 {
    dup {
      pop pop
      1 string dup 0 3 index put 3 index exec
    } exch cshow
    pop pop
  } def
}{
  /cshow2 {
    currentfont /FontType get 0 eq {
      0 2 2 index length 1 sub {
        2 copy get exch 1 add 2 index exch get
        2 copy exch 256 mul add
        2 string dup 0 6 5 roll put dup 1 5 4 roll put
        3 index exec
      } for
    } {
      dup {
        1 string dup 0 3 index put 3 index exec
      } forall
    } ifelse
    pop pop
  } def
} ifelse
/awcp {
  exch {
    false charpath
    5 index 5 index rmoveto
    6 index eq { 7 index 7 index rmoveto } if
  } exch cshow2
  6 {pop} repeat
} def
/Tj {
  fCol
  1 index stringwidth pdfTextMat idtransform pop
  sub 1 index length dup 0 ne { div } { pop pop 0 } ifelse
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16 {
  fCol
  2 index stringwidth pdfTextMat idtransform pop
  sub exch div
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16V {
  fCol
  2 index stringwidth pdfTextMat idtransform exch pop
  sub exch div
  0 pdfWordSpacing pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing add 0 exch
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj1 {
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 8 2 roll
  pdfTextRender 1 and 0 eq {
    6 copy awidthshow
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    7 index 7 index moveto
    6 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    false awcp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    8 6 roll moveto
    false awcp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    8 {pop} repeat
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { pdfFontSize 0.001 mul mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { pdfFontSize 0.001 mul mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2 image operators
/pdfImBuf 100 string def
/pdfIm {
  image
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfImM {
  fCol imagemask
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
/F8_0 /Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /quoteleft/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/exclamdown/cent/sterling/fraction/yen/florin/section
  /currency/quotesingle/quotedblleft/guillemotleft/guilsinglleft/guilsinglright/fi/fl
  /.notdef/endash/dagger/daggerdbl/periodcentered/.notdef/paragraph/bullet
  /quotesinglbase/quotedblbase/quotedblright/guillemotright/ellipsis/perthousand/.notdef/questiondown
  /.notdef/grave/acute/circumflex/tilde/macron/breve/dotaccent
  /dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut/ogonek/caron
  /emdash/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/AE/.notdef/ordfeminine/.notdef/.notdef/.notdef/.notdef
  /Lslash/Oslash/OE/ordmasculine/.notdef/.notdef/.notdef/.notdef
  /.notdef/ae/.notdef/.notdef/.notdef/dotlessi/.notdef/.notdef
  /lslash/oslash/oe/germandbls/.notdef/.notdef/.notdef/.notdef]
pdfMakeFont
%%EndSetup
pdfStartPage
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
0 1264 5950 5872 re
W
5 w
1 j
/DeviceGray {} CS
[1] SC
1464 4816 3448 2248 re
S
/DeviceGray {} CS
[0] SC
1464 4816 m
4912 4816 l
S
1464 7064 m
4912 7064 l
S
1464 4816 m
1464 7064 l
S
4912 4816 m
4912 7064 l
S
1464 4816 m
4912 4816 l
S
1464 4816 m
1464 7064 l
S
1464 4816 m
1464 4856 l
S
1464 7064 m
1464 7032 l
S
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 144 469.6] Tm
0 0 Td
/F8_0 10 Tf
(1) 5.56 Tj
Q
1888 4816 m
1888 4856 l
S
1888 7064 m
1888 7032 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 186.4 469.6] Tm
0 0 Td
/F8_0 10 Tf
(2) 5.56 Tj
Q
2320 4816 m
2320 4856 l
S
2320 7064 m
2320 7032 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 229.6 469.6] Tm
0 0 Td
/F8_0 10 Tf
(3) 5.56 Tj
Q
2752 4816 m
2752 4856 l
S
2752 7064 m
2752 7032 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 272.8 469.6] Tm
0 0 Td
/F8_0 10 Tf
(4) 5.56 Tj
Q
3184 4816 m
3184 4856 l
S
3184 7064 m
3184 7032 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 316 469.6] Tm
0 0 Td
/F8_0 10 Tf
(5) 5.56 Tj
Q
3616 4816 m
3616 4856 l
S
3616 7064 m
3616 7032 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 359.2 469.6] Tm
0 0 Td
/F8_0 10 Tf
(6) 5.56 Tj
Q
4048 4816 m
4048 4856 l
S
4048 7064 m
4048 7032 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 402.4 469.6] Tm
0 0 Td
/F8_0 10 Tf
(7) 5.56 Tj
Q
4480 4816 m
4480 4856 l
S
4480 7064 m
4480 7032 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 445.6 469.6] Tm
0 0 Td
/F8_0 10 Tf
(8) 5.56 Tj
Q
4912 4816 m
4912 4856 l
S
4912 7064 m
4912 7032 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 488.8 469.6] Tm
0 0 Td
/F8_0 10 Tf
(9) 5.56 Tj
Q
1464 4816 m
1496 4816 l
S
4912 4816 m
4872 4816 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 132 478.4] Tm
0 0 Td
/F8_0 10 Tf
(50) 11.12 Tj
Q
1464 5048 m
1496 5048 l
S
4912 5048 m
4872 5048 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 126.4 501.6] Tm
0 0 Td
/F8_0 10 Tf
(100) 16.68 Tj
Q
1464 5272 m
1496 5272 l
S
4912 5272 m
4872 5272 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 126.4 524] Tm
0 0 Td
/F8_0 10 Tf
(150) 16.68 Tj
Q
1464 5496 m
1496 5496 l
S
4912 5496 m
4872 5496 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 126.4 546.4] Tm
0 0 Td
/F8_0 10 Tf
(200) 16.68 Tj
Q
1464 5720 m
1496 5720 l
S
4912 5720 m
4872 5720 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 126.4 568.8] Tm
0 0 Td
/F8_0 10 Tf
(250) 16.68 Tj
Q
1464 5944 m
1496 5944 l
S
4912 5944 m
4872 5944 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 126.4 591.2] Tm
0 0 Td
/F8_0 10 Tf
(300) 16.68 Tj
Q
1464 6168 m
1496 6168 l
S
4912 6168 m
4872 6168 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 126.4 613.6] Tm
0 0 Td
/F8_0 10 Tf
(350) 16.68 Tj
Q
1464 6392 m
1496 6392 l
S
4912 6392 m
4872 6392 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 126.4 636] Tm
0 0 Td
/F8_0 10 Tf
(400) 16.68 Tj
Q
1464 6616 m
1496 6616 l
S
4912 6616 m
4872 6616 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 126.4 658.4] Tm
0 0 Td
/F8_0 10 Tf
(450) 16.68 Tj
Q
1464 6840 m
1496 6840 l
S
4912 6840 m
4872 6840 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 126.4 680.8] Tm
0 0 Td
/F8_0 10 Tf
(500) 16.68 Tj
Q
1464 7064 m
1496 7064 l
S
4912 7064 m
4872 7064 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 126.4 703.2] Tm
0 0 Td
/F8_0 10 Tf
(550) 16.68 Tj
Q
1464 4816 m
4912 4816 l
S
1464 7064 m
4912 7064 l
S
1464 4816 m
1464 7064 l
S
4912 4816 m
4912 7064 l
S
Q
q
1464 4808 3456 2256 re
W
5 w
1 j
/DeviceRGB {} CS
[0 0 1] SC
1464 4848 m
1888 5048 l
2320 5272 l
2752 5496 l
3184 5728 l
3616 5952 l
4048 6176 l
4480 6408 l
4912 6640 l
S
Q
q
1392 4776 3592 1936 re
W
5 w
1 j
/DeviceRGB {} CS
[0 0 1] SC
1488 4848 m
1488 4834.75 1477.25 4824 1464 4824 c
1450.75 4824 1440 4834.75 1440 4848 c
1440 4861.25 1450.75 4872 1464 4872 c
1477.25 4872 1488 4861.25 1488 4848 c
S
1912 5048 m
1912 5034.75 1901.25 5024 1888 5024 c
1874.75 5024 1864 5034.75 1864 5048 c
1864 5061.25 1874.75 5072 1888 5072 c
1901.25 5072 1912 5061.25 1912 5048 c
S
2344 5272 m
2344 5258.75 2333.25 5248 2320 5248 c
2306.75 5248 2296 5258.75 2296 5272 c
2296 5285.25 2306.75 5296 2320 5296 c
2333.25 5296 2344 5285.25 2344 5272 c
S
2776 5496 m
2776 5482.75 2765.25 5472 2752 5472 c
2738.75 5472 2728 5482.75 2728 5496 c
2728 5509.25 2738.75 5520 2752 5520 c
2765.25 5520 2776 5509.25 2776 5496 c
S
3208 5728 m
3208 5714.75 3197.25 5704 3184 5704 c
3170.75 5704 3160 5714.75 3160 5728 c
3160 5741.25 3170.75 5752 3184 5752 c
3197.25 5752 3208 5741.25 3208 5728 c
S
3640 5952 m
3640 5938.75 3629.25 5928 3616 5928 c
3602.75 5928 3592 5938.75 3592 5952 c
3592 5965.25 3602.75 5976 3616 5976 c
3629.25 5976 3640 5965.25 3640 5952 c
S
4072 6176 m
4072 6162.75 4061.25 6152 4048 6152 c
4034.75 6152 4024 6162.75 4024 6176 c
4024 6189.25 4034.75 6200 4048 6200 c
4061.25 6200 4072 6189.25 4072 6176 c
S
4504 6408 m
4504 6394.75 4493.25 6384 4480 6384 c
4466.75 6384 4456 6394.75 4456 6408 c
4456 6421.25 4466.75 6432 4480 6432 c
4493.25 6432 4504 6421.25 4504 6408 c
S
4936 6640 m
4936 6626.75 4925.25 6616 4912 6616 c
4898.75 6616 4888 6626.75 4888 6640 c
4888 6653.25 4898.75 6664 4912 6664 c
4925.25 6664 4936 6653.25 4936 6640 c
S
Q
q
1464 4808 3456 2256 re
W
5 w
1 j
/DeviceRGB {} CS
[0 0.5 0] SC
1464 4904 m
1888 5096 l
2320 5304 l
2752 5528 l
3184 5768 l
3616 5992 l
4048 6248 l
4480 6464 l
4912 6728 l
S
Q
q
1392 4832 3592 1960 re
W
5 w
/DeviceRGB {} CS
[0 0.5 0] SC
1440 4880 48 48 re
S
1864 5072 48 48 re
S
2296 5280 48 48 re
S
2728 5504 48 48 re
S
3160 5744 48 48 re
S
3592 5968 48 48 re
S
4024 6224 48 48 re
S
4456 6440 48 48 re
S
4888 6704 48 48 re
S
Q
q
1464 4808 3456 2256 re
W
5 w
1 j
/DeviceRGB {} CS
[1 0 0] SC
1464 5000 m
1888 5192 l
2320 5392 l
2752 5640 l
3184 5832 l
3616 6144 l
4048 6424 l
4480 6640 l
4912 6936 l
S
Q
q
1392 4928 3592 2080 re
W
5 w
1 j
/DeviceRGB {} CS
[1 0 0] SC
1440 5000 m
1488 5000 l
S
1464 5024 m
1464 4976 l
S
1864 5192 m
1912 5192 l
S
1888 5216 m
1888 5168 l
S
2296 5392 m
2344 5392 l
S
2320 5416 m
2320 5368 l
S
2728 5640 m
2776 5640 l
S
2752 5664 m
2752 5616 l
S
3160 5832 m
3208 5832 l
S
3184 5856 m
3184 5808 l
S
3592 6144 m
3640 6144 l
S
3616 6168 m
3616 6120 l
S
4024 6424 m
4072 6424 l
S
4048 6448 m
4048 6400 l
S
4456 6640 m
4504 6640 l
S
4480 6664 m
4480 6616 l
S
4888 6936 m
4936 6936 l
S
4912 6960 m
4912 6912 l
S
1448 5016 m
1480 4984 l
S
1480 5016 m
1448 4984 l
S
1872 5208 m
1904 5176 l
S
1904 5208 m
1872 5176 l
S
2304 5408 m
2336 5376 l
S
2336 5408 m
2304 5376 l
S
2736 5656 m
2768 5624 l
S
2768 5656 m
2736 5624 l
S
3168 5848 m
3200 5816 l
S
3200 5848 m
3168 5816 l
S
3600 6160 m
3632 6128 l
S
3632 6160 m
3600 6128 l
S
4032 6440 m
4064 6408 l
S
4064 6440 m
4032 6408 l
S
4464 6656 m
4496 6624 l
S
4496 6656 m
4464 6624 l
S
4896 6952 m
4928 6920 l
S
4928 6952 m
4896 6920 l
S
Q
q
0 1264 5950 5872 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 275.2 456.8] Tm
0 0 Td
/F8_0 10 Tf
(Number of Markets) 85.02 Tj
-5.6 -10.4 Td
(per CandidateService) 96.15 Tj
[0 1 -1 0 108.8 536.8] Tm
0 0 Td
/F8_0 10 Tf
(Time taken for Adaptation) 114.5 Tj
37.6 -10.4 Td
(\(in secs\)) 37.78 Tj
[1 0 0 1 144.8 476.8] Tm
0 0 Td
/F8_0 10 Tf
( ) 2.78 Tj
345.6 225.6 Td
( ) 2.78 Tj
Q
/DeviceGray {} cs
[1] sc
1640 6432 728 456 re
f*
5 w
1 j
/DeviceGray {} CS
[1] SC
1640 6432 728 456 re
S
/DeviceGray {} CS
[0] SC
1640 6432 m
2368 6432 l
S
1640 6888 m
2368 6888 l
S
1640 6432 m
1640 6888 l
S
2368 6432 m
2368 6888 l
S
1640 6432 m
2368 6432 l
S
1640 6432 m
1640 6888 l
S
1640 6432 m
2368 6432 l
S
1640 6888 m
2368 6888 l
S
1640 6432 m
1640 6888 l
S
2368 6432 m
2368 6888 l
S
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 204 676] Tm
0 0 Td
/F8_0 10 Tf
(2 QoS) 28.35 Tj
Q
Q
q
1640 6424 736 464 re
W
5 w
1 j
/DeviceRGB {} CS
[0 0 1] SC
1696 6808 m
2000 6808 l
S
Q
q
1776 6728 144 144 re
W
5 w
1 j
/DeviceRGB {} CS
[0 0 1] SC
1872 6808 m
1872 6794.75 1861.25 6784 1848 6784 c
1834.75 6784 1824 6794.75 1824 6808 c
1824 6821.25 1834.75 6832 1848 6832 c
1861.25 6832 1872 6821.25 1872 6808 c
S
Q
q
0 1264 5950 5872 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 204 661.6] Tm
0 0 Td
/F8_0 10 Tf
(4 QoS) 28.35 Tj
Q
Q
q
1640 6424 736 464 re
W
5 w
1 j
/DeviceRGB {} CS
[0 0.5 0] SC
1696 6664 m
2000 6664 l
S
Q
q
1776 6584 144 144 re
W
5 w
/DeviceRGB {} CS
[0 0.5 0] SC
1824 6640 48 48 re
S
Q
q
0 1264 5950 5872 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 204 647.2] Tm
0 0 Td
/F8_0 10 Tf
(6 QoS) 28.35 Tj
Q
Q
q
1640 6424 736 464 re
W
5 w
1 j
/DeviceRGB {} CS
[1 0 0] SC
1696 6520 m
2000 6520 l
S
Q
q
1776 6448 144 144 re
W
5 w
1 j
/DeviceRGB {} CS
[1 0 0] SC
1824 6520 m
1872 6520 l
S
1848 6544 m
1848 6496 l
S
1832 6536 m
1864 6504 l
S
1864 6536 m
1832 6504 l
S
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%EOF
